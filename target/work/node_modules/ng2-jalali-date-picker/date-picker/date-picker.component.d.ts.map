{"version":3,"file":"date-picker.component.d.ts","sources":["date-picker.component.d.ts"],"names":[],"mappingssourcesContent":["import { IDate } from '../common/models/date.model';\nimport { DomHelper } from '../common/services/dom-appender/dom-appender.service';\nimport { UtilsService } from '../common/services/utils/utils.service';\nimport { CalendarMode } from '../common/types/calendar-mode';\nimport { CalendarValue } from '../common/types/calendar-value';\nimport { ECalendarValue } from '../common/types/calendar-value-enum';\nimport { SingleCalendarValue } from '../common/types/single-calendar-value';\nimport { IDayCalendarConfig } from '../day-calendar/day-calendar-config.model';\nimport { DayCalendarComponent } from '../day-calendar/day-calendar.component';\nimport { IDayTimeCalendarConfig } from '../day-time-calendar/day-time-calendar-config.model';\nimport { ITimeSelectConfig } from '../time-select/time-select-config.model';\nimport { TimeSelectComponent } from '../time-select/time-select.component';\nimport { IDatePickerConfig, IDatePickerConfigInternal } from './date-picker-config.model';\nimport { IDpDayPickerApi } from './date-picker.api';\nimport { DatePickerService } from './date-picker.service';\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormControl, ValidationErrors, Validator } from '@angular/forms';\nimport { Moment, unitOfTime } from 'jalali-moment';\nimport { DateValidator } from '../common/types/validator.type';\nimport { MonthCalendarComponent } from '../month-calendar/month-calendar.component';\nimport { DayTimeCalendarComponent } from '../day-time-calendar/day-time-calendar.component';\nimport { INavEvent } from '../common/models/navigation-event.model';\nexport declare class DatePickerComponent implements OnChanges, OnInit, AfterViewInit, ControlValueAccessor, Validator, OnDestroy {\n    private readonly dayPickerService;\n    private readonly domHelper;\n    private readonly elemRef;\n    private readonly renderer;\n    private readonly utilsService;\n    readonly cd: ChangeDetectorRef;\n    isInitialized: boolean;\n    config: IDatePickerConfig;\n    mode: CalendarMode;\n    placeholder: string;\n    disabled: boolean;\n    displayDate: SingleCalendarValue;\n    theme: string;\n    minDate: SingleCalendarValue;\n    maxDate: SingleCalendarValue;\n    minTime: SingleCalendarValue;\n    maxTime: SingleCalendarValue;\n    open: EventEmitter<void>;\n    close: EventEmitter<void>;\n    onChange: EventEmitter<CalendarValue>;\n    onGoToCurrent: EventEmitter<void>;\n    onLeftNav: EventEmitter<INavEvent>;\n    onRightNav: EventEmitter<INavEvent>;\n    calendarContainer: ElementRef;\n    dayCalendarRef: DayCalendarComponent;\n    monthCalendarRef: MonthCalendarComponent;\n    dayTimeCalendarRef: DayTimeCalendarComponent;\n    timeSelectRef: TimeSelectComponent;\n    componentConfig: IDatePickerConfigInternal;\n    dayCalendarConfig: IDayCalendarConfig;\n    dayTimeCalendarConfig: IDayTimeCalendarConfig;\n    timeSelectConfig: ITimeSelectConfig;\n    _areCalendarsShown: boolean;\n    hideStateHelper: boolean;\n    _selected: Moment[];\n    inputValue: CalendarValue;\n    inputValueType: ECalendarValue;\n    isFocusedTrigger: boolean;\n    _currentDateView: Moment;\n    inputElementValue: string;\n    calendarWrapper: HTMLElement;\n    appendToElement: HTMLElement;\n    inputElementContainer: HTMLElement;\n    popupElem: HTMLElement;\n    handleInnerElementClickUnlisteners: Function[];\n    globalListnersUnlisteners: Function[];\n    validateFn: DateValidator;\n    api: IDpDayPickerApi;\n    selected: Moment[];\n    areCalendarsShown: boolean;\n    readonly openOnFocus: boolean;\n    readonly openOnClick: boolean;\n    currentDateView: Moment;\n    constructor(dayPickerService: DatePickerService, domHelper: DomHelper, elemRef: ElementRef, renderer: Renderer2, utilsService: UtilsService, cd: ChangeDetectorRef);\n    onClick(): void;\n    onBodyClick(): void;\n    onScroll(): void;\n    writeValue(value: CalendarValue): void;\n    registerOnChange(fn: any): void;\n    onChangeCallback(_: any, changedByInput: boolean): void;\n    registerOnTouched(fn: any): void;\n    validate(formControl: FormControl): ValidationErrors;\n    processOnChangeCallback(selected: Moment[] | string): CalendarValue;\n    initValidators(): void;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngAfterViewInit(): void;\n    setDisabledState(isDisabled: boolean): void;\n    setElementPositionInDom(): void;\n    setInputElementContainer(): void;\n    handleInnerElementClick(element: HTMLElement): void;\n    init(): void;\n    inputFocused(): void;\n    showCalendars(): void;\n    hideCalendar(): void;\n    onViewDateChange(value: CalendarValue): void;\n    dateSelected(date: IDate, granularity: unitOfTime.Base, ignoreClose?: boolean): void;\n    onDateClick(): void;\n    onKeyPress(event: KeyboardEvent): void;\n    moveCalendarTo(date: SingleCalendarValue): void;\n    onLeftNavClick(change: INavEvent): void;\n    onRightNavClick(change: INavEvent): void;\n    startGlobalListeners(): void;\n    changeLocale(locale: any): void;\n    stopGlobalListeners(): void;\n    ngOnDestroy(): void;\n}\n"]}