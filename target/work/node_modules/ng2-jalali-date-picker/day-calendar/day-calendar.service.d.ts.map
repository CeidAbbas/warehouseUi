{"version":3,"file":"day-calendar.service.d.ts","sources":["day-calendar.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Moment } from 'jalali-moment';\nimport { WeekDays } from '../common/types/week-days.type';\nimport { UtilsService } from '../common/services/utils/utils.service';\nimport { IDay } from './day.model';\nimport { IDayCalendarConfig, IDayCalendarConfigInternal } from './day-calendar-config.model';\nimport { IMonthCalendarConfig } from '../month-calendar/month-calendar-config';\nexport declare class DayCalendarService {\n    private utilsService;\n    private readonly DAYS;\n    readonly DEFAULT_CONFIG: IDayCalendarConfig;\n    readonly GREGORIAN_CONFIG_EXTENTION: IDayCalendarConfig;\n    constructor(utilsService: UtilsService);\n    private removeNearMonthWeeks(currentMonth, monthArray);\n    getConfig(config: IDayCalendarConfig): IDayCalendarConfigInternal;\n    generateDaysMap(firstDayOfWeek: WeekDays): {\n        [key: number]: string;\n    };\n    generateMonthArray(config: IDayCalendarConfigInternal, month: Moment, selected: Moment[]): IDay[][];\n    generateWeekdays(firstDayOfWeek: WeekDays, locale?: string): Moment[];\n    isDateDisabled(date: Moment, config: IDayCalendarConfigInternal): boolean;\n    getHeaderLabel(config: IDayCalendarConfigInternal, month: Moment): string;\n    shouldShowLeft(min: Moment, currentMonthView: Moment): boolean;\n    shouldShowRight(max: Moment, currentMonthView: Moment): boolean;\n    generateDaysIndexMap(firstDayOfWeek: WeekDays): {\n        [key: number]: string;\n    };\n    getMonthCalendarConfig(componentConfig: IDayCalendarConfigInternal): IMonthCalendarConfig;\n    getDayBtnText(config: IDayCalendarConfigInternal, day: Moment): string;\n    getDayBtnCssClass(config: IDayCalendarConfigInternal, day: Moment): string;\n}\n"]}