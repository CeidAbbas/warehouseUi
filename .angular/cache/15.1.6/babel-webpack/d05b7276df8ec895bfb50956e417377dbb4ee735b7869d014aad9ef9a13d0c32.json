{"ast":null,"code":"import { BaseService } from \"../general/service/base.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PackageService extends BaseService {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.packageUrl = this.baseUrl + 'rest/package';\n  }\n  getAllPackage() {\n    return this.httpClient.get(`${this.packageUrl}/getAll`);\n  }\n  getAllPackageWarehouseInventoryByPackage(packageId) {\n    return this.httpClient.get(`${this.packageUrl}/getAll`);\n  }\n  savePackage(packageEntry) {\n    return this.httpClient.post(`${this.packageUrl}/save`, packageEntry);\n  }\n  addWarehouseInventoryToPackage(packageWarehouseInventory) {\n    return this.httpClient.post(`${this.packageUrl}/savePackageWarehouseInventory`, packageWarehouseInventory);\n  }\n}\nPackageService.ɵfac = function PackageService_Factory(t) {\n  return new (t || PackageService)(i0.ɵɵinject(i1.HttpClient));\n};\nPackageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PackageService,\n  factory: PackageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,QAAO,iCAAiC;;;AAS3D,OAAM,MAAOC,cAAe,SAAQD,WAAW;EAI7CE,YAAoBC,UAAsB;IACxC,KAAK,EAAE;IADW,eAAU,GAAVA,UAAU;IAF9B,eAAU,GAAG,IAAI,CAACC,OAAO,GAAG,cAAc;EAI1C;EAEAC,aAAa;IACX,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACC,UAAU,SAAS,CAAC;EACpE;EACAC,wCAAwC,CAACC,SAAiB;IACxD,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACC,UAAU,SAAS,CAAC;EACpE;EAEAG,WAAW,CAACC,YAAqB;IAC/B,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAU,GAAG,IAAI,CAACL,UAAU,OAAO,EAAEI,YAAY,CAAC;EAC/E;EAEAE,8BAA8B,CAACC,yBAAoD;IACjF,OAAO,IAAI,CAACX,UAAU,CAACS,IAAI,CAA4B,GAAG,IAAI,CAACL,UAAU,gCAAgC,EAAEO,yBAAyB,CAAC;EACvI;;AArBWb,cAAe;mBAAfA,cAAc;AAAA;AAAdA,cAAe;SAAfA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFb;AAAM","names":["BaseService","PackageService","constructor","httpClient","baseUrl","getAllPackage","get","packageUrl","getAllPackageWarehouseInventoryByPackage","packageId","savePackage","packageEntry","post","addWarehouseInventoryToPackage","packageWarehouseInventory","factory","providedIn"],"sourceRoot":"","sources":["D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\package\\package.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BaseService} from \"../general/service/base.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport { Package } from './package';\r\nimport {Observable} from \"rxjs\";\r\nimport {PackageWarehouseInventory} from \"../packageWarehouseInventory/package-warehouse-inventory\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PackageService extends BaseService {\r\n\r\n  packageUrl = this.baseUrl + 'rest/package';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getAllPackage(): Observable<Package[]> {\r\n    return this.httpClient.get<Package[]>(`${this.packageUrl}/getAll`);\r\n  }\r\n  getAllPackageWarehouseInventoryByPackage(packageId: string): Observable<Package[]> {\r\n    return this.httpClient.get<Package[]>(`${this.packageUrl}/getAll`);\r\n  }\r\n\r\n  savePackage(packageEntry: Package): Observable<Package> {\r\n    return this.httpClient.post<Package>(`${this.packageUrl}/save`, packageEntry);\r\n  }\r\n\r\n  addWarehouseInventoryToPackage(packageWarehouseInventory: PackageWarehouseInventory): Observable<PackageWarehouseInventory> {\r\n    return this.httpClient.post<PackageWarehouseInventory>(`${this.packageUrl}/savePackageWarehouseInventory`, packageWarehouseInventory);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}