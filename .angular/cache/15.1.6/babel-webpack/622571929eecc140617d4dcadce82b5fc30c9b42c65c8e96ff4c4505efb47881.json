{"ast":null,"code":"import { BaseService } from '../general/service/base.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WarehouseResponsibleService extends BaseService {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.warehouseResponsibleUrl = this.baseUrl + 'rest/warehouseResponsible';\n  }\n  getAllWarehouseResponsible() {\n    return this.httpClient.get(`${this.warehouseResponsibleUrl}/getAll`);\n  }\n  loadWarehouseResponsible(warehouseResponsibleId) {\n    return this.httpClient.get(`${this.warehouseResponsibleUrl}/load/${warehouseResponsibleId}`);\n  }\n  saveWarehouseResponsible(warehouseResponsible) {\n    return this.httpClient.post(`${this.warehouseResponsibleUrl}/save`, warehouseResponsible);\n  }\n  deleteWarehouseResponsible(warehouseResponsible) {\n    return this.httpClient.delete(`${this.warehouseResponsibleUrl}/delete/${warehouseResponsible.id}`);\n  }\n}\nWarehouseResponsibleService.ɵfac = function WarehouseResponsibleService_Factory(t) {\n  return new (t || WarehouseResponsibleService)(i0.ɵɵinject(i1.HttpClient));\n};\nWarehouseResponsibleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WarehouseResponsibleService,\n  factory: WarehouseResponsibleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAQA,WAAW,QAAO,iCAAiC;;;AAK3D,OAAM,MAAOC,2BAA4B,SAAQD,WAAW;EAI1DE,YAAoBC,UAAsB;IACxC,KAAK,EAAE;IADW,eAAU,GAAVA,UAAU;IAFvB,4BAAuB,GAAG,IAAI,CAACC,OAAO,GAAG,2BAA2B;EAI3E;EAEAC,0BAA0B;IACxB,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAyB,GAAG,IAAI,CAACC,uBAAuB,SAAS,CAAC;EAC9F;EAEAC,wBAAwB,CAACC,sBAA8B;IACrD,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAuB,GAAG,IAAI,CAACC,uBAAuB,SAASE,sBAAsB,EAAE,CAAC;EACpH;EAEAC,wBAAwB,CAACC,oBAA0C;IACjE,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAS,GAAG,IAAI,CAACL,uBAAuB,OAAO,EAAEI,oBAAoB,CAAC;EACnG;EAEAE,0BAA0B,CAACF,oBAA0C;IACnE,OAAO,IAAI,CAACR,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACP,uBAAuB,WAAWI,oBAAoB,CAACI,EAAE,EAAE,CAAC;EACpG;;AAtBWd,2BAA4B;mBAA5BA,2BAA2B;AAAA;AAA3BA,2BAA4B;SAA5BA,2BAA2B;EAAAe,SAA3Bf,2BAA2B;EAAAgB,YAF1B;AAAM","names":["BaseService","WarehouseResponsibleService","constructor","httpClient","baseUrl","getAllWarehouseResponsible","get","warehouseResponsibleUrl","loadWarehouseResponsible","warehouseResponsibleId","saveWarehouseResponsible","warehouseResponsible","post","deleteWarehouseResponsible","delete","id","factory","providedIn"],"sourceRoot":"","sources":["D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\warehouse-responsible\\warehouse-responsible.service.ts"],"sourcesContent":["import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {WarehouseResponsible} from './warehouse-responsible';\r\nimport {Observable} from 'rxjs';\r\nimport {BaseService} from '../general/service/base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WarehouseResponsibleService extends BaseService {\r\n\r\n  public warehouseResponsibleUrl = this.baseUrl + 'rest/warehouseResponsible';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getAllWarehouseResponsible(): Observable<WarehouseResponsible[]> {\r\n    return this.httpClient.get<WarehouseResponsible[]>(`${this.warehouseResponsibleUrl}/getAll`);\r\n  }\r\n\r\n  loadWarehouseResponsible(warehouseResponsibleId: string): Observable<WarehouseResponsible> {\r\n    return this.httpClient.get<WarehouseResponsible>(`${this.warehouseResponsibleUrl}/load/${warehouseResponsibleId}`);\r\n  }\r\n\r\n  saveWarehouseResponsible(warehouseResponsible: WarehouseResponsible): Observable<Object> {\r\n    return this.httpClient.post<Object>(`${this.warehouseResponsibleUrl}/save`, warehouseResponsible);\r\n  }\r\n\r\n  deleteWarehouseResponsible(warehouseResponsible: WarehouseResponsible): Observable<any> {\r\n    return this.httpClient.delete(`${this.warehouseResponsibleUrl}/delete/${warehouseResponsible.id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}