{"ast":null,"code":"import { BaseService } from \"../../../service/base.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CeidSelectService extends BaseService {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n  }\n  getData(rest) {\n    return this.httpClient.get(`${this.baseUrl}${rest}`);\n  }\n  getBaseInformationData(rest) {\n    return this.httpClient.get(`${this.baseUrl}${rest}`);\n  }\n}\nCeidSelectService.ɵfac = function CeidSelectService_Factory(t) {\n  return new (t || CeidSelectService)(i0.ɵɵinject(i1.HttpClient));\n};\nCeidSelectService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CeidSelectService,\n  factory: CeidSelectService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,QAAO,+BAA+B;;;AAOzD,OAAM,MAAOC,iBAAkB,SAAQD,WAAW;EAEhDE,YACUC,UAAsB;IAE9B,KAAK,EAAE;IAFC,eAAU,GAAVA,UAAU;EAGpB;EAEAC,OAAO,CAACC,IAAY;IAClB,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,GAAGF,IAAI,EAAE,CAAC;EACtD;EAEAG,sBAAsB,CAACH,IAAY;IACjC,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,GAAGF,IAAI,EAAE,CAAC;EACtD;;AAdWJ,iBAAkB;mBAAlBA,iBAAiB;AAAA;AAAjBA,iBAAkB;SAAlBA,iBAAiB;EAAAQ,SAAjBR,iBAAiB;EAAAS,YAFhB;AAAM","names":["BaseService","CeidSelectService","constructor","httpClient","getData","rest","get","baseUrl","getBaseInformationData","factory","providedIn"],"sourceRoot":"","sources":["D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\general\\utility\\input-tools\\ceid-select\\ceid-select.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BaseService} from \"../../../service/base.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CeidSelectService extends BaseService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  getData(rest: string): Observable<any> {\r\n    return this.httpClient.get(`${this.baseUrl}${rest}`)\r\n  }\r\n\r\n  getBaseInformationData(rest: string): Observable<any> {\r\n    return this.httpClient.get(`${this.baseUrl}${rest}`)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}