{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BaseInformation } from './base-information';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./base-information.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/tree\";\nimport * as i5 from \"primeng/contextmenu\";\nfunction BaseInformationEditComponent_div_8_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function BaseInformationEditComponent_div_8_input_4_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.label = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.label);\n  }\n}\nfunction BaseInformationEditComponent_div_8_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function BaseInformationEditComponent_div_8_ng_template_5_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.label = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.label);\n  }\n}\nfunction BaseInformationEditComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"label\");\n    i0.ɵɵtext(2, \"\\u0646\\u0627\\u0645\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵtemplate(4, BaseInformationEditComponent_div_8_input_4_Template, 1, 1, \"input\", 8);\n    i0.ɵɵtemplate(5, BaseInformationEditComponent_div_8_ng_template_5_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 10)(8, \"span\", 11)(9, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function BaseInformationEditComponent_div_8_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.save());\n    });\n    i0.ɵɵtext(10, \" \\u062B\\u0628\\u062A \");\n    i0.ɵɵelement(11, \"i\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"span\", 11)(13, \"button\", 14);\n    i0.ɵɵtext(14, \" \\u0628\\u0627\\u0632\\u0646\\u0634\\u0627\\u0646\\u06CC \");\n    i0.ɵɵelement(15, \"i\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"span\", 11)(17, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function BaseInformationEditComponent_div_8_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.switchToGrid());\n    });\n    i0.ɵɵtext(18, \" \\u0628\\u0627\\u0632\\u06AF\\u0634\\u062A \");\n    i0.ɵɵelement(19, \"i\", 17);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(6);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.colorMode)(\"ngIfElse\", _r3);\n  }\n}\n// import {jqxTreeComponent} from \"jqwidgets-ng/jqxtree\";\nexport class BaseInformationEditComponent {\n  ngAfterViewInit() {\n    // setTimeout(() => {\n    //   this.tree.selectItem(null);\n    // });\n  }\n  constructor(baseInformationService, decimalPipe) {\n    this.baseInformationService = baseInformationService;\n    this.decimalPipe = decimalPipe;\n    this.baseInformationTitle = '';\n    this.editMode = false;\n    this.addNode = false;\n    this.colorMode = false;\n    this.baseInformationId = '';\n    this.editModeEmitter = new EventEmitter();\n    this.parent = '';\n    this.label = '';\n    this.treeNode = [];\n    this.selectedFile = null;\n    this.menuItems = [];\n    this.baseInformation = new BaseInformation();\n  }\n  ngOnInit() {\n    this.onLoad();\n    this.menuItems = [{\n      label: 'افزودن',\n      icon: 'pi pi-plus',\n      command: event => this.showAddNode(this.selectedFile, 'add')\n    }, {\n      label: 'ویرایش',\n      icon: 'pi pi-plus',\n      command: event => this.showAddNode(this.selectedFile, 'edit')\n    }\n    // {label: 'Unselect', icon: 'pi pi-times', command: (event) => this.unselectFile()}\n    ];\n  }\n\n  showAddNode(file, mode) {\n    this.colorMode = false;\n    console.log(file);\n    console.log(mode);\n    this.baseInformation = file;\n    let hierarchy;\n    this.parent = this.baseInformation.id;\n    if (mode === 'add') {\n      this.baseInformation.id = '';\n      // @ts-ignore\n      hierarchy = this.baseInformation.hierarchy + this.transformDecimal(this.baseInformation.children.length + 1);\n      if (file.hierarchy == '009') {\n        this.colorMode = true;\n      } else if (file.hierarchy.search('009') != 0 && file.hierarchy <= '009') {\n        this.baseInformation.hierarchy = hierarchy;\n        this.addNode = true;\n      }\n    } else if (mode === 'edit') {\n      if (file.hierarchy.search('009') == 0 && file.hierarchy > '009') {\n        this.colorMode = true;\n      }\n      this.label = this.baseInformation.label;\n      if (this.baseInformation.hierarchy != undefined) {\n        hierarchy = this.baseInformation.hierarchy;\n        this.baseInformation.hierarchy = hierarchy;\n      }\n      this.addNode = true;\n    }\n  }\n  unselectFile() {\n    this.selectedFile = null;\n  }\n  onLoad() {\n    this.baseInformation = new BaseInformation();\n    this.baseInformationService.getAllBaseInformation().subscribe(baseInformations => {\n      this.baseInformations = baseInformations;\n      this.makeTreeJson(this.baseInformations);\n    });\n  }\n  save() {\n    this.baseInformation.label = this.label;\n    this.baseInformation.children = new Array();\n    this.baseInformation.parent = '';\n    this.baseInformationService.saveBaseInformation(this.baseInformation, this.parent).subscribe(data => {\n      this.onLoad();\n      this.addNode = false;\n      this.label = '';\n      this.baseInformation = new BaseInformation();\n    });\n  }\n  switchToGrid() {\n    this.baseInformation = new BaseInformation();\n    this.editModeEmitter.emit(false);\n  }\n  /*selectBaseInformation() {\r\n    this.editMode = true;\r\n    if (this.baseInformationHeader === 'gender') {\r\n      this.baseInformationTitle = 'جنسيت';\r\n    } else if (this.baseInformationHeader === 'wareType') {\r\n      this.baseInformationTitle = 'نوع كالا';\r\n    } else if (this.baseInformationHeader === 'wareUnit') {\r\n      this.baseInformationTitle = 'واحد كالا';\r\n    } else {\r\n      this.editMode = false;\r\n    }\r\n    // this.baseInformationService.getAllBaseInformation().subscribe(baseInformations => {\r\n    //   this.baseInformations = baseInformations;\r\n    //   this.makeTreeJson(baseInformations);\r\n    //   // this.baseInformations = this.removeNull(baseInformations, this.baseInformationHeader);\r\n    // });\r\n  }*/\n  removeNull(objects, type) {\n    objects.forEach((object, index) => {\n      if (object[type] == null) {\n        delete objects[index];\n      } else {}\n    });\n    return objects;\n  }\n  makeTreeJson(baseInformations) {\n    let baseInformationHeaderFiltered = [];\n    baseInformationHeaderFiltered = baseInformations.filter((baseInformation, index) => {\n      baseInformation.hierarchy < 1000 ? delete baseInformations[index] : null;\n      return baseInformation.hierarchy < 1000;\n    });\n    baseInformationHeaderFiltered.forEach(baseInformationHeader => {\n      this.getChild(baseInformationHeader, baseInformations);\n    });\n    this.treeNode = baseInformationHeaderFiltered;\n  }\n  getChild(baseInformationHeader, baseInformations) {\n    let baseInformationsTree = [];\n    baseInformationHeader.children = new Array();\n    baseInformations.filter(baseInformation => {\n      // @ts-ignore\n      if (baseInformation.hierarchy !== baseInformationHeader.hierarchy && baseInformation.hierarchy.search(baseInformationHeader.hierarchy) === 0 && baseInformationHeader.hierarchy.length + 3 === baseInformation.hierarchy.length) {\n        let bae = this.getChild(baseInformation, baseInformations);\n        // @ts-ignore\n        baseInformationHeader.children.push(bae[0]);\n      }\n    });\n    baseInformationsTree.push(baseInformationHeader);\n    return baseInformationsTree;\n  }\n  transformDecimal(num) {\n    return this.decimalPipe.transform(num, '3.');\n  }\n}\nBaseInformationEditComponent.ɵfac = function BaseInformationEditComponent_Factory(t) {\n  return new (t || BaseInformationEditComponent)(i0.ɵɵdirectiveInject(i1.BaseInformationService), i0.ɵɵdirectiveInject(i2.DecimalPipe));\n};\nBaseInformationEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BaseInformationEditComponent,\n  selectors: [[\"app-base-information-edit\"]],\n  inputs: {\n    baseInformationId: \"baseInformationId\"\n  },\n  outputs: {\n    editModeEmitter: \"editModeEmitter\"\n  },\n  decls: 10,\n  vars: 5,\n  consts: [[1, \"row\", \"m-0\", \"p-0\", \"col-12\", \"col-sm-12\", \"h-100\"], [1, \"col-12\", \"col-sm-12\", \"control-label\", \"text-danger\"], [1, \"row\", \"m-0\", \"mt-3\", \"p-0\", \"col-6\", \"col-sm-6\"], [\"selectionMode\", \"single\", 3, \"value\", \"contextMenu\", \"selection\", \"selectionChange\"], [3, \"model\"], [\"rightMenu\", \"\"], [\"class\", \"row m-0 mt-3 p-0 col-6 col-sm-6\", 4, \"ngIf\"], [1, \"col-6\", \"col-sm-6\"], [\"type\", \"text\", \"class\", \"form-control\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\", \"ngIfElse\"], [\"colorModeFalse\", \"\"], [1, \"row\", \"m-0\", \"mt-3\", \"p-0\", \"col-12\", \"col-sm-12\"], [2, \"width\", \"8rem\"], [1, \"btn\", \"btn-primary\", \"w-100\", 3, \"click\"], [1, \"fa\", \"fa-save\"], [1, \"btn\", \"btn-danger\", \"w-100\"], [1, \"fa\", \"fa-refresh\"], [1, \"btn\", \"btn-warning\", \"w-100\", 3, \"click\"], [1, \"fa\", \"fa-backspace\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"color\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function BaseInformationEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"\\u0627\\u0637\\u0644\\u0627\\u0639\\u0627\\u062A \\u0627\\u0648\\u0644\\u064A\\u0647\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\")(5, \"p-tree\", 3);\n      i0.ɵɵlistener(\"selectionChange\", function BaseInformationEditComponent_Template_p_tree_selectionChange_5_listener($event) {\n        return ctx.selectedFile = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"p-contextMenu\", 4, 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, BaseInformationEditComponent_div_8_Template, 20, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \"\\n\\u00A0\\n\");\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.treeNode)(\"contextMenu\", _r0)(\"selection\", ctx.selectedFile);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"model\", ctx.menuItems);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.addNode);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.Tree, i5.ContextMenu]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}