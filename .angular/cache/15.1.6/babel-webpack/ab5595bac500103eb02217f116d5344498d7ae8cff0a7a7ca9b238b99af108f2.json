{"ast":null,"code":"import { BaseService } from '../general/service/base.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WarehouseService extends BaseService {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.warehouseUrl = this.baseUrl + 'rest/warehouse';\n  }\n  getAllWarehouses() {\n    return this.httpClient.get(`${this.warehouseUrl}/getAll`);\n  }\n  loadWarehouse(warehouseId) {\n    return this.httpClient.get(`${this.warehouseUrl}/load/${warehouseId}`);\n  }\n  // tslint:disable-next-line:ban-types\n  saveWarehouse(warehouse) {\n    return this.httpClient.post(`${this.warehouseUrl}/save`, warehouse);\n  }\n  deleteWarehouse(warehouse) {\n    return this.httpClient.delete(`${this.warehouseUrl}/delete/${warehouse.id}`);\n  }\n}\nWarehouseService.ɵfac = function WarehouseService_Factory(t) {\n  return new (t || WarehouseService)(i0.ɵɵinject(i1.HttpClient));\n};\nWarehouseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WarehouseService,\n  factory: WarehouseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAQA,WAAW,QAAO,iCAAiC;;;AAK3D,OAAM,MAAOC,gBAAiB,SAAQD,WAAW;EAI/CE,YAAoBC,UAAsB;IACxC,KAAK,EAAE;IADW,eAAU,GAAVA,UAAU;IAFtB,iBAAY,GAAG,IAAI,CAACC,OAAO,GAAG,gBAAgB;EAItD;EAEAC,gBAAgB;IACd,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAc,GAAG,IAAI,CAACC,YAAY,SAAS,CAAC;EACxE;EAEAC,aAAa,CAACC,WAAmB;IAC/B,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACC,YAAY,SAASE,WAAW,EAAE,CAAC;EACnF;EAEA;EACAC,aAAa,CAACC,SAAoB;IAChC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,GAAG,IAAI,CAACL,YAAY,OAAO,EAAEI,SAAS,CAAC;EACrE;EAEAE,eAAe,CAACF,SAAoB;IAClC,OAAO,IAAI,CAACR,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACP,YAAY,WAAWI,SAAS,CAACI,EAAE,EAAE,CAAC;EAC9E;;AAvBWd,gBAAiB;mBAAjBA,gBAAgB;AAAA;AAAhBA,gBAAiB;SAAjBA,gBAAgB;EAAAe,SAAhBf,gBAAgB;EAAAgB,YAFf;AAAM","names":["BaseService","WarehouseService","constructor","httpClient","baseUrl","getAllWarehouses","get","warehouseUrl","loadWarehouse","warehouseId","saveWarehouse","warehouse","post","deleteWarehouse","delete","id","factory","providedIn"],"sourceRoot":"","sources":["D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\warehouse\\warehouse.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Warehouse} from './warehouse';\r\nimport {Observable} from 'rxjs';\r\nimport {BaseService} from '../general/service/base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WarehouseService extends BaseService {\r\n\r\n  private warehouseUrl = this.baseUrl + 'rest/warehouse';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getAllWarehouses(): Observable<Warehouse[]> {\r\n    return this.httpClient.get<Warehouse[]>(`${this.warehouseUrl}/getAll`);\r\n  }\r\n\r\n  loadWarehouse(warehouseId: string): Observable<Warehouse> {\r\n    return this.httpClient.get<Warehouse>(`${this.warehouseUrl}/load/${warehouseId}`);\r\n  }\r\n\r\n  // tslint:disable-next-line:ban-types\r\n  saveWarehouse(warehouse: Warehouse): Observable<Object> {\r\n    return this.httpClient.post(`${this.warehouseUrl}/save`, warehouse);\r\n  }\r\n\r\n  deleteWarehouse(warehouse: Warehouse): Observable<any> {\r\n    return this.httpClient.delete(`${this.warehouseUrl}/delete/${warehouse.id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}