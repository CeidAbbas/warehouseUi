{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./ceid-select.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CeidSelectComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", model_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(model_r1.titleName);\n  }\n}\nexport class CeidSelectComponent {\n  constructor(ceidSelectService) {\n    this.ceidSelectService = ceidSelectService;\n    this.models = [];\n    this.selectClass = '';\n    this.rest = '';\n    this.isBaseInformation = false;\n    this.titleName = '';\n    this.parent = '';\n    this.selected = '';\n    this.sendValue = new EventEmitter();\n  }\n  ngOnInit() {\n    console.log(this.selected);\n    if (this.isBaseInformation) {\n      this.ceidSelectService.getBaseInformationData(this.rest).subscribe(res => {\n        this.models = res.filter(model => {\n          return model.parent == this.parent;\n        });\n      });\n    } else {\n      this.ceidSelectService.getData(this.rest).subscribe(res => {\n        this.models = res;\n      });\n    }\n  }\n  onChange() {\n    this.sendValue.emit(this.selectValue);\n  }\n}\nCeidSelectComponent.ɵfac = function CeidSelectComponent_Factory(t) {\n  return new (t || CeidSelectComponent)(i0.ɵɵdirectiveInject(i1.CeidSelectService));\n};\nCeidSelectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CeidSelectComponent,\n  selectors: [[\"ceid-select\"]],\n  inputs: {\n    selectClass: \"selectClass\",\n    rest: \"rest\",\n    isBaseInformation: \"isBaseInformation\",\n    titleName: \"titleName\",\n    parent: \"parent\",\n    selected: \"selected\",\n    selectValue: \"selectValue\"\n  },\n  outputs: {\n    sendValue: \"sendValue\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function CeidSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"select\", 0);\n      i0.ɵɵlistener(\"change\", function CeidSelectComponent_Template_select_change_0_listener() {\n        return ctx.onChange();\n      })(\"ngModelChange\", function CeidSelectComponent_Template_select_ngModelChange_0_listener($event) {\n        return ctx.selectValue = $event;\n      });\n      i0.ɵɵtemplate(1, CeidSelectComponent_option_1_Template, 2, 2, \"option\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.selectClass);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.models);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmBA,YAAY,QAA8B,eAAe;;;;;;;ICE1EC,iCAAyD;IAAAA,YAAqB;IAAAA,iBAAS;;;;IAA/EA,mCAAkB;IAA+BA,eAAqB;IAArBA,wCAAqB;;;ADMhF,OAAM,MAAOC,mBAAmB;EAY9BC,YACUC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAXpB,WAAM,GAAc,EAAE;IACpB,gBAAW,GAAW,EAAE;IACxB,SAAI,GAAW,EAAE;IACjB,sBAAiB,GAAG,KAAK;IACzB,cAAS,GAAG,EAAE;IACd,WAAM,GAAG,EAAE;IACX,aAAQ,GAAG,EAAE;IAEZ,cAAS,GAAsB,IAAIJ,YAAY,EAAO;EAKhE;EAEAK,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;IAC1B,IAAI,IAAI,CAACC,iBAAiB,EAAE;MAC1B,IAAI,CAACL,iBAAiB,CAACM,sBAAsB,CAAC,IAAI,CAACC,IAAI,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;QACvE,IAAI,CAACC,MAAM,GAAGD,GAAG,CAACE,MAAM,CAAEC,KAA0B,IAAI;UACtD,OAAOA,KAAK,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM;QACpC,CAAC,CAAC;MACJ,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACb,iBAAiB,CAACc,OAAO,CAAC,IAAI,CAACP,IAAI,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;QACxD,IAAI,CAACC,MAAM,GAAGD,GAAG;MACnB,CAAC,CAAC;;EAEN;EAEAM,QAAQ;IACN,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC;EACvC;;AAlCWpB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAqB;EAAAC;IAAAC;IAAAd;IAAAF;IAAAiB;IAAAT;IAAAT;IAAAc;EAAA;EAAAK;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;IAAA;MCRhC9B,iCAA8E;MAAhDA;QAAA,OAAU+B,cAAU;MAAA,EAAC;QAAA;MAAA;MAEjD/B,0EAAuF;MACzFA,iBAAS;;;MAHDA,8BAAqB;MAAuBA,yCAAyB;MAE9BA,eAAS;MAATA,oCAAS","names":["EventEmitter","i0","CeidSelectComponent","constructor","ceidSelectService","ngOnInit","console","log","selected","isBaseInformation","getBaseInformationData","rest","subscribe","res","models","filter","model","parent","getData","onChange","sendValue","emit","selectValue","selectors","inputs","selectClass","titleName","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\general\\utility\\input-tools\\ceid-select\\ceid-select.component.ts","D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\general\\utility\\input-tools\\ceid-select\\ceid-select.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {CeidSelectService} from \"./ceid-select.service\";\r\n\r\n@Component({\r\n  selector: 'ceid-select',\r\n  templateUrl: './ceid-select.component.html',\r\n  styleUrls: ['./ceid-select.component.css']\r\n})\r\nexport class CeidSelectComponent<M> implements OnInit {\r\n\r\n  public models?: M[] | any= [];\r\n  @Input() selectClass: string = '';\r\n  @Input() rest: string = '';\r\n  @Input() isBaseInformation = false;\r\n  @Input() titleName = '';\r\n  @Input() parent = '';\r\n  @Input() selected = '';\r\n  @Input() selectValue: any;\r\n  @Output() sendValue: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private ceidSelectService: CeidSelectService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.selected);\r\n    if (this.isBaseInformation) {\r\n      this.ceidSelectService.getBaseInformationData(this.rest).subscribe(res => {\r\n        this.models = res.filter((model: { parent: string; }) => {\r\n          return model.parent == this.parent;\r\n        });\r\n      });\r\n    } else {\r\n      this.ceidSelectService.getData(this.rest).subscribe(res => {\r\n        this.models = res;\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange() {\r\n    this.sendValue.emit(this.selectValue);\r\n  }\r\n}\r\n","<select [class]=\"selectClass\" (change)=\"onChange()\" [(ngModel)]=\"selectValue\">\r\n<!--  <option value=\"-1\" selected=\"selected\">...</option>-->\r\n  <option [value]=\"model.id\" *ngFor=\"let model of models\" >{{ model.titleName }}</option>\r\n</select>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}