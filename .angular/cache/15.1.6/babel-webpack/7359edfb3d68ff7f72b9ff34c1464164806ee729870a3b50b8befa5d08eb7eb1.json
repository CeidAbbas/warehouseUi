{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport { AsyncSubject, BehaviorSubject } from 'rxjs';\nimport { Injectable, NgModule, defineInjectable, EventEmitter, Component, ViewChild, ViewEncapsulation } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n/** @type {?} */\nimport * as Éµngcc0 from '@angular/core';\nconst _c0 = [\"video\"];\nconst _c1 = [\"canvas\"];\nconst _c2 = [\"resultsPanel\"];\nconst MEDIA_STREAM_DEFAULT = {\n  audio: false,\n  video: true\n};\n/** @type {?} */\nconst CONFIG_DEFAULT = {\n  src: '',\n  fps: 30,\n  vibrate: 300,\n  decode: 'utf-8',\n  isBeep: true,\n  deviceActive: 0,\n  constraints: MEDIA_STREAM_DEFAULT\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n/**\r\n * OVERRIDES\r\n * \\@param variableKey\r\n * \\@param config\r\n * \\@param defaultConfig\r\n * \\@return\r\n * @type {?}\r\n */\nconst OVERRIDES =\n/**\r\n* @param {?} variableKey\r\n* @param {?} config\r\n* @param {?} defaultConfig\r\n* @return {?}\r\n*/\n(variableKey, config, defaultConfig) => {\n  if (config && Object.keys(config[variableKey]).length) {\n    for (const key in defaultConfig) {\n      /** @type {?} */\n      const cloneDeep = JSON.parse(JSON.stringify(Object.assign({}, config[variableKey], {\n        [key]: /** @type {?} */defaultConfig[key]\n      })));\n      config[variableKey] = config[variableKey].hasOwnProperty(key) ? config[variableKey] : cloneDeep;\n    }\n    return config[variableKey];\n  } else {\n    return defaultConfig;\n  }\n};\n/**\r\n * Rxjs complete\r\n * \\@param as\r\n * \\@param data\r\n * \\@param error\r\n * @type {?}\r\n */\nconst AS_COMPLETE =\n/**\r\n* @param {?} as\r\n* @param {?} data\r\n* @param {?=} error\r\n* @return {?}\r\n*/\n(as, data, error = null) => {\n  error ? as.error(error) : as.next(data);\n  as.complete();\n};\n/**\r\n * CAMERA_BEEP\r\n * \\@param isPlay\r\n * \\@return\r\n * @type {?}\r\n */\nconst PLAY_AUDIO =\n/**\r\n* @param {?=} isPlay\r\n* @return {?}\r\n*/\n(isPlay = false) => {\n  if (isPlay === false) return;\n  /** @type {?} */\n  const audio = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU' + Array(300).join('101'));\n  // when the sound has been loaded, execute your code\n  audio.oncanplaythrough =\n  /**\r\n  * @return {?}\r\n  */\n  () => {\n    /** @type {?} */\n    const promise = audio.play();\n    if (promise) {\n      promise.catch(\n      /**\r\n      * @param {?} e\r\n      * @return {?}\r\n      */\n      e => {\n        if (e.name === \"NotAllowedError\" || e.name === \"NotSupportedError\") ;\n      });\n    }\n  };\n};\n/**\r\n * HAS_OWN_PROPERTY\r\n * Fix issue vs ng v 6-7-8\r\n * Optional chaining (?.) just have on ng v 9++\r\n * eg: HAS_OWN_PROPERTY(config, 'frameOptions.style') // output: boolean\r\n * \\@param obj\r\n * \\@param propertyPath\r\n * \\@return\r\n * @type {?}\r\n */\nconst HAS_OWN_PROPERTY =\n/**\r\n* @param {?} obj\r\n* @param {?} propertyPath\r\n* @return {?}\r\n*/\n(obj, propertyPath) => {\n  /** @type {?} */\n  const properties = propertyPath.split(\".\");\n  for (let i = 0; i < properties.length; i++) {\n    /** @type {?} */\n    let prop = properties[i];\n    if (!obj.hasOwnProperty(prop)) {\n      return false;\n    } else {\n      obj = obj[prop];\n    }\n  }\n  return true;\n};\n/**\r\n * DRAW_RESULT_APPEND_CHILD\r\n * \\@param code\r\n * \\@param oriCanvas\r\n * \\@param elTarget\r\n * @type {?}\r\n */\nconst DRAW_RESULT_APPEND_CHILD =\n/**\r\n* @param {?} code\r\n* @param {?} oriCanvas\r\n* @param {?} elTarget\r\n* @return {?}\r\n*/\n(code, oriCanvas, elTarget) => {\n  /** @type {?} */\n  let widthZoom;\n  /** @type {?} */\n  let heightZoom;\n  /** @type {?} */\n  let oriWidth = oriCanvas.width;\n  /** @type {?} */\n  let oriHeight = oriCanvas.height;\n  /** @type {?} */\n  let oriWHRatio = oriWidth / oriHeight;\n  /** @type {?} */\n  let imgWidth = parseInt(getComputedStyle(oriCanvas).width);\n  /** @type {?} */\n  let imgHeight = parseInt(getComputedStyle(oriCanvas).height);\n  /** @type {?} */\n  let imgWHRatio = imgWidth / imgHeight;\n  elTarget.innerHTML = '';\n  if (oriWHRatio > imgWHRatio) {\n    widthZoom = imgWidth / oriWidth;\n    heightZoom = imgWidth / oriWHRatio / oriHeight;\n  } else {\n    heightZoom = imgHeight / oriHeight;\n    widthZoom = imgHeight * oriWHRatio / oriWidth;\n  }\n  for (let i = 0; i < code.length; i++) {\n    /** @type {?} */\n    const _code = code[i];\n    // New canvas\n    /** @type {?} */\n    let cvs = document.createElement(\"canvas\");\n    /** @type {?} */\n    let ctx = /** @type {?} */cvs.getContext('2d', {\n      willReadFrequently: true\n    });\n    /** @type {?} */\n    let loc = {};\n    /** @type {?} */\n    let X = [];\n    /** @type {?} */\n    let Y = [];\n    // Point x,y\n    /** @type {?} */\n    const points = _code.points;\n    for (let j = 0; j < points.length; j++) {\n      /** @type {?} */\n      const xj = HAS_OWN_PROPERTY(points, `${j}.x`) ? points[j].x : 0;\n      /** @type {?} */\n      const yj = HAS_OWN_PROPERTY(points, `${j}.y`) ? points[j].y : 0;\n      loc[`x${j + 1}`] = xj;\n      loc[`y${j + 1}`] = yj;\n      X.push(xj);\n      Y.push(yj);\n    }\n    // Min max\n    /** @type {?} */\n    let maxX = Math.max(...X);\n    /** @type {?} */\n    let minX = Math.min(...X);\n    /** @type {?} */\n    let maxY = Math.max(...Y);\n    /** @type {?} */\n    let minY = Math.min(...Y);\n    // Add class\n    cvs.setAttribute('class', 'qrcode-polygon');\n    // Size with screen zoom\n    if (oriWHRatio > imgWHRatio) {\n      cvs.style.top = minY * heightZoom + (imgHeight - imgWidth / oriWHRatio) * 0.5 + \"px\";\n      cvs.style.left = minX * widthZoom + \"px\";\n      cvs.width = (maxX - minX) * widthZoom;\n      cvs.height = (maxY - minY) * widthZoom;\n    } else {\n      cvs.style.top = minY * heightZoom + \"px\";\n      cvs.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n      cvs.width = (maxX - minX) * heightZoom;\n      cvs.height = (maxY - minY) * heightZoom;\n    }\n    // Style for canvas\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = 'green';\n    ctx.fillStyle = \"#55f02880\";\n    // polygon [x,y, x,y, x,y.....];\n    /** @type {?} */\n    const polygon = [];\n    for (let k = 0; k < X.length; k++) {\n      polygon.push((loc[`x${k + 1}`] - minX) * heightZoom);\n      polygon.push((loc[`y${k + 1}`] - minY) * widthZoom);\n    }\n    // Copy array\n    /** @type {?} */\n    const shape = /** @type {?} */polygon.slice(0);\n    // Draw polygon\n    ctx.beginPath();\n    ctx.moveTo(shape.shift(), shape.shift());\n    while (shape.length) {\n      ctx.lineTo(shape.shift(), shape.shift()); //x,y\n    }\n\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    // Tooltip result\n    /** @type {?} */\n    const qrcodeTooltipTemp = document.createElement('div');\n    qrcodeTooltipTemp.setAttribute('class', 'qrcode-tooltip-temp');\n    qrcodeTooltipTemp.innerText = _code.value;\n    // Tooltip box\n    /** @type {?} */\n    const qrcodeTooltip = document.createElement('div');\n    qrcodeTooltip.setAttribute('class', 'qrcode-tooltip');\n    qrcodeTooltip.appendChild(qrcodeTooltipTemp);\n    heightZoom = imgHeight / oriHeight;\n    widthZoom = imgHeight * oriWHRatio / oriWidth;\n    qrcodeTooltip.style.fontSize = widthZoom * 15 + 'px';\n    qrcodeTooltip.style.top = minY * heightZoom + \"px\";\n    qrcodeTooltip.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n    qrcodeTooltip.style.width = (maxX - minX) * heightZoom + \"px\";\n    qrcodeTooltip.style.height = (maxY - minY) * heightZoom + \"px\";\n    // Result text\n    /** @type {?} */\n    const resultText = document.createElement('span');\n    resultText.innerText = _code.value;\n    resultText.style.fontSize = widthZoom * 13 + 'px';\n    // Set position result text\n    resultText.style.top = minY * heightZoom + -20 * heightZoom + \"px\";\n    resultText.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n    if (elTarget) {\n      elTarget.appendChild(qrcodeTooltip);\n      elTarget.appendChild(resultText);\n      elTarget.appendChild(cvs);\n    }\n  }\n}\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * @param code\r\n * @param cvs\r\n */;\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * \\@param code\r\n * \\@param cvs\r\n * @type {?}\r\n */\nconst DRAW_RESULT_ON_CANVAS =\n/**\r\n* @param {?} code\r\n* @param {?} cvs\r\n* @return {?}\r\n*/\n(code, cvs) => {\n  /** @type {?} */\n  let ctx = /** @type {?} */cvs.getContext('2d', {\n    willReadFrequently: true\n  });\n  for (let i = 0; i < code.length; i++) {\n    /** @type {?} */\n    const _code = code[i];\n    /** @type {?} */\n    let loc = {};\n    /** @type {?} */\n    let X = [];\n    /** @type {?} */\n    let Y = [];\n    // Point x,y\n    /** @type {?} */\n    const points = _code.points;\n    for (let j = 0; j < points.length; j++) {\n      /** @type {?} */\n      const xj = HAS_OWN_PROPERTY(points, `${j}.x`) ? points[j].x : 0;\n      /** @type {?} */\n      const yj = HAS_OWN_PROPERTY(points, `${j}.y`) ? points[j].y : 0;\n      loc[`x${j + 1}`] = xj;\n      loc[`y${j + 1}`] = yj;\n      X.push(xj);\n      Y.push(yj);\n    }\n    // Min max\n    /** @type {?} */\n    let minX = Math.min(...X);\n    /** @type {?} */\n    let minY = Math.min(...Y);\n    // Style for canvas\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = 'green';\n    ctx.fillStyle = \"#55f02880\";\n    ctx.font = \"15px serif\";\n    FILL_TEXT_MULTI_LINE(ctx, _code.value, minX, minY - 5);\n    // polygon [x,y, x,y, x,y.....];\n    /** @type {?} */\n    const polygon = [];\n    for (let k = 0; k < X.length; k++) {\n      polygon.push(loc[`x${k + 1}`]);\n      polygon.push(loc[`y${k + 1}`]);\n    }\n    // Copy array\n    /** @type {?} */\n    const shape = /** @type {?} */polygon.slice(0);\n    // Draw polygon\n    ctx.beginPath();\n    ctx.moveTo(shape.shift(), shape.shift());\n    while (shape.length) {\n      ctx.lineTo(shape.shift(), shape.shift()); //x,y\n    }\n\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  }\n}\n/**\r\n * READ_AS_DATA_URL\r\n * @param file\r\n * @param config\r\n * @return Promise\r\n */;\n/**\r\n * READ_AS_DATA_URL\r\n * \\@param file\r\n * \\@param config\r\n * \\@return Promise\r\n * @type {?}\r\n */\nconst READ_AS_DATA_URL =\n/**\r\n* @param {?} file\r\n* @param {?} config\r\n* @return {?}\r\n*/\n(file, config) => {\n  /**\r\n   * overrides *\r\n   * @type {?}\r\n   */\n  let decode = HAS_OWN_PROPERTY(config, 'decode') ? config.decode : CONFIG_DEFAULT.decode;\n  /** drawImage **/\n  return new Promise(\n  /**\r\n  * @param {?} resolve\r\n  * @param {?} reject\r\n  * @return {?}\r\n  */\n  (resolve, reject) => {\n    /** @type {?} */\n    const fileReader = new FileReader();\n    fileReader.onload =\n    /**\r\n    * @return {?}\r\n    */\n    () => {\n      /** @type {?} */\n      const objectFile = {\n        name: file.name,\n        file: file,\n        url: URL.createObjectURL(file)\n      };\n      // Set the src of this Image object.\n      /** @type {?} */\n      const image = new Image();\n      // Setting cross origin value to anonymous\n      image.setAttribute('crossOrigin', 'anonymous');\n      // When our image has loaded.\n      image.onload =\n      /**\r\n      * @return {?}\r\n      */\n      () => __awaiter(this, void 0, void 0, function* () {\n        // Get the canvas element by using the getElementById method.\n        /** @type {?} */\n        const canvas = document.createElement('canvas');\n        // HTMLImageElement size\n        canvas.width = image.naturalWidth || image.width;\n        canvas.height = image.naturalHeight || image.height;\n        // Get a 2D drawing context for the canvas.\n        /** @type {?} */\n        const ctx = /** @type {?} */canvas.getContext('2d');\n        // Draw image\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        // Data image\n        /** @type {?} */\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        // Scanner\n        /** @type {?} */\n        const code = yield zbarWasm.scanImageData(imageData);\n        if (code && code.length) {\n          // Decode\n          code.forEach(\n          /**\r\n          * @param {?} s\r\n          * @return {?}\r\n          */\n          s => s.value = s.decode(decode && decode.toLocaleLowerCase()));\n          // Overlay\n          DRAW_RESULT_ON_CANVAS(code, canvas);\n          // Emit object\n          /** @type {?} */\n          const blob = yield CANVAS_TO_BLOB(canvas);\n          /** @type {?} */\n          const url = URL.createObjectURL(blob);\n          /** @type {?} */\n          const blobToFile =\n          /**\r\n          * @param {?} theBlob\r\n          * @param {?} fileName\r\n          * @return {?}\r\n          */\n          (theBlob, fileName) => new File([theBlob], fileName, {\n            lastModified: new Date().getTime(),\n            type: theBlob.type\n          });\n          resolve(Object.assign({}, objectFile, {\n            data: code,\n            url: url,\n            canvas: canvas,\n            file: blobToFile(blob, objectFile.name)\n          }));\n        } else {\n          resolve(Object.assign({}, objectFile, {\n            data: code,\n            canvas: canvas\n          }));\n        }\n      });\n      // Set src\n      image.src = objectFile.url;\n    };\n    fileReader.onerror =\n    /**\r\n    * @param {?} error\r\n    * @return {?}\r\n    */\n    error => reject(error);\n    fileReader.readAsDataURL(file);\n  });\n}\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * @param canvas\r\n * @param type\r\n * @return Promise\r\n */;\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * \\@param canvas\r\n * \\@param type\r\n * \\@return Promise\r\n * @type {?}\r\n */\nconst CANVAS_TO_BLOB =\n/**\r\n* @param {?} canvas\r\n* @param {?=} type\r\n* @return {?}\r\n*/\n(canvas, type) => {\n  return new Promise(\n  /**\r\n  * @param {?} resolve\r\n  * @param {?} reject\r\n  * @return {?}\r\n  */\n  (resolve, reject) => canvas.toBlob(\n  /**\r\n  * @param {?} blob\r\n  * @return {?}\r\n  */\n  blob => resolve(blob), type));\n}\n/**\r\n * Convert blob to file\r\n * @param theBlob\r\n * @param fileName\r\n * @return File\r\n */;\n/**\r\n * Convert blob to file\r\n * \\@param theBlob\r\n * \\@param fileName\r\n * \\@return File\r\n * @type {?}\r\n */\nconst BLOB_TO_FILE =\n/**\r\n* @param {?} theBlob\r\n* @param {?} fileName\r\n* @return {?}\r\n*/\n(theBlob, fileName) => {\n  return new File([theBlob], fileName, {\n    lastModified: new Date().getTime(),\n    type: theBlob.type\n  });\n}\n/**\r\n * FILES_TO_SCAN\r\n * @param files\r\n * @return AsyncSubject\r\n */;\n/**\r\n * FILES_TO_SCAN\r\n * \\@param files\r\n * \\@return AsyncSubject\r\n * @type {?}\r\n */\nconst FILES_TO_SCAN =\n/**\r\n* @param {?=} files\r\n* @param {?=} configs\r\n* @param {?=} as\r\n* @return {?}\r\n*/\n(files = [], configs, as = new AsyncSubject()) => {\n  Promise.all(Object.assign([], files).map(\n  /**\r\n  * @param {?} m\r\n  * @return {?}\r\n  */\n  m => READ_AS_DATA_URL(m, configs))).then(\n  /**\r\n  * @param {?} img\r\n  * @return {?}\r\n  */\n  img => AS_COMPLETE(as, img)).catch(\n  /**\r\n  * @param {?} error\r\n  * @return {?}\r\n  */\n  error => AS_COMPLETE(as, null, error));\n  return as;\n}\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * @param ctx\r\n * @param text\r\n * @param x\r\n * @param y\r\n */;\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * \\@param ctx\r\n * \\@param text\r\n * \\@param x\r\n * \\@param y\r\n * @type {?}\r\n */\nconst FILL_TEXT_MULTI_LINE =\n/**\r\n* @param {?} ctx\r\n* @param {?} text\r\n* @param {?} x\r\n* @param {?} y\r\n* @return {?}\r\n*/\n(ctx, text, x, y) => {\n  /** @type {?} */\n  let lineHeight = ctx.measureText(\"M\").width * 1.2;\n  /** @type {?} */\n  let lines = text.split(\"\\n\");\n  for (var i = 0; i < lines.length; ++i) {\n    ctx.fillText(lines[i], x, y);\n    ctx.strokeText(lines[i], x, y);\n    y += lineHeight;\n  }\n}\n/**\r\n * VIBRATE\r\n * Báº­t rung trÃªn mobile\r\n * @param time\r\n */;\n/**\r\n * VIBRATE\r\n * Báº­t rung trÃªn mobile\r\n * \\@param time\r\n * @type {?}\r\n */\nconst VIBRATE =\n/**\r\n* @param {?} time\r\n* @return {?}\r\n*/\ntime => {\n  time && IS_MOBILE() && window.navigator.vibrate(time);\n};\n/**\r\n * IS_MOBILE\r\n * \\@return\r\n * @type {?}\r\n */\nconst IS_MOBILE =\n/**\r\n* @return {?}\r\n*/\n() => {\n  /** @type {?} */\n  const vendor = navigator.userAgent || navigator['vendor'] || window['opera'];\n  return !!(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(vendor) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(vendor.substr(0, 4)));\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass NgxScannerQrcodeService {\n  /**\r\n   * Load files\r\n   * @param {?=} files\r\n   * @return {?} AsyncSubject\r\n   */\n  loadFiles(files = []) {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    Promise.all(Object.assign([], files).map(\n    /**\r\n    * @param {?} m\r\n    * @return {?}\r\n    */\n    m => this.readAsDataURL(m))).then(\n    /**\r\n    * @param {?} img\r\n    * @return {?}\r\n    */\n    img => AS_COMPLETE(as, img)).catch(\n    /**\r\n    * @param {?} error\r\n    * @return {?}\r\n    */\n    error => AS_COMPLETE(as, null, error));\n    return as;\n  }\n  /**\r\n   * loadFilesToScan\r\n   * @param {?=} files\r\n   * @param {?=} config\r\n   * @return {?}\r\n   */\n  loadFilesToScan(files = [], config) {\n    return FILES_TO_SCAN(files, config);\n  }\n  /**\r\n   * readAsDataURL\r\n   * @private\r\n   * @param {?} file\r\n   * @return {?} Promise\r\n   */\n  readAsDataURL(file) {\n    /** drawImage **/\n    return new Promise(\n    /**\r\n    * @param {?} resolve\r\n    * @param {?} reject\r\n    * @return {?}\r\n    */\n    (resolve, reject) => {\n      /** @type {?} */\n      const fileReader = new FileReader();\n      fileReader.onload =\n      /**\r\n      * @return {?}\r\n      */\n      () => {\n        /** @type {?} */\n        const objectFile = {\n          name: file.name,\n          file: file,\n          url: URL.createObjectURL(file)\n        };\n        resolve(objectFile);\n      };\n      fileReader.onerror =\n      /**\r\n      * @param {?} error\r\n      * @return {?}\r\n      */\n      error => reject(error);\n      fileReader.readAsDataURL(file);\n    });\n  }\n}\nNgxScannerQrcodeService.Éµfac = function NgxScannerQrcodeService_Factory(t) {\n  return new (t || NgxScannerQrcodeService)();\n};\nNgxScannerQrcodeService.Éµprov = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjectable({\n  token: NgxScannerQrcodeService,\n  factory: NgxScannerQrcodeService.Éµfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\nNgxScannerQrcodeService.ngInjectableDef = defineInjectable({\n  factory: function NgxScannerQrcodeService_Factory() {\n    return new NgxScannerQrcodeService();\n  },\n  token: NgxScannerQrcodeService,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(NgxScannerQrcodeService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass NgxScannerQrcodeComponent {\n  constructor() {\n    /**\r\n     * EventEmitter\r\n     */\n    this.event = new EventEmitter();\n    /**\r\n     * Input\r\n     */\n    this.src = CONFIG_DEFAULT.src;\n    this.fps = CONFIG_DEFAULT.fps;\n    this.vibrate = CONFIG_DEFAULT.vibrate;\n    this.decode = CONFIG_DEFAULT.decode;\n    this.isBeep = CONFIG_DEFAULT.isBeep;\n    this.deviceActive = CONFIG_DEFAULT.deviceActive;\n    this.config = CONFIG_DEFAULT;\n    this.constraints = CONFIG_DEFAULT.constraints;\n    /**\r\n     * Export\r\n     */\n    this.isStart = false;\n    this.isLoading = false;\n    this.isTorch = false;\n    this.data = new BehaviorSubject([]);\n    this.devices = new BehaviorSubject([]);\n    this.dataForResize = [];\n  }\n  /**\r\n   * @return {?}\r\n   */\n  ngOnInit() {\n    this.overrideConfig();\n    if (this.src) {\n      this.loadImage(this.src);\n    }\n    this.resize();\n  }\n  /**\r\n   * start\r\n   * @return {?} AsyncSubject\r\n   */\n  start() {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    if (this.isStart) {\n      // Reject\n      AS_COMPLETE(as, false);\n    } else {\n      // mediaDevices\n      this.loadAllDevices(as);\n    }\n    return as;\n  }\n  /**\r\n   * playDevice\r\n   * @param {?} deviceId\r\n   * @param {?=} as\r\n   * @return {?} AsyncSubject\r\n   */\n  playDevice(deviceId, as = new AsyncSubject()) {\n    /** @type {?} */\n    const existDeviceId = this.isStart ? this.getConstraints().deviceId != deviceId : true;\n    switch (true) {\n      case deviceId == 'null' || deviceId == null:\n        this.stop();\n        AS_COMPLETE(as, false);\n        break;\n      case deviceId && existDeviceId:\n        stop();\n        this.stop();\n        clearInterval(this.rAF_ID);\n        // Loading on\n        this.status(false, true);\n        /** @type {?} */\n        const constraints = {\n          audio: false,\n          video: typeof (this.constraints && this.constraints.video) === 'boolean' ? {\n            deviceId: deviceId\n          } : Object.assign({\n            deviceId: deviceId\n          }, this.constraints && this.constraints.video)\n        };\n        this.deviceActive = this.devices.value.findIndex(\n        /**\r\n        * @param {?} f\r\n        * @return {?}\r\n        */\n        f => f.deviceId == deviceId);\n        // MediaStream\n        navigator.mediaDevices.getUserMedia(constraints).then(\n        /**\r\n        * @param {?} stream\r\n        * @return {?}\r\n        */\n        stream => {\n          this.video.nativeElement.srcObject = stream;\n          this.video.nativeElement.onloadedmetadata =\n          /**\r\n          * @return {?}\r\n          */\n          () => {\n            this.video.nativeElement.play();\n            this.requestAnimationFrame();\n            this.status(true, false);\n            AS_COMPLETE(as, true);\n          };\n        }).catch(\n        /**\r\n        * @param {?} error\r\n        * @return {?}\r\n        */\n        error => {\n          this.status(false, false);\n          this.eventEmit(false);\n          AS_COMPLETE(as, false, error);\n        });\n        break;\n      default:\n        AS_COMPLETE(as, false);\n        break;\n    }\n    return as;\n  }\n  /**\r\n   * stop\r\n   * @return {?} AsyncSubject\r\n   */\n  stop() {\n    this.eventEmit(null);\n    this.status(false, false);\n    /** @type {?} */\n    const as = new AsyncSubject();\n    try {\n      this.removeCanvas();\n      clearInterval(this.rAF_ID);\n      /** @type {?} */this.video.nativeElement.srcObject.getTracks().forEach(\n      /**\r\n      * @param {?} track\r\n      * @return {?}\r\n      */\n      track => {\n        track.stop();\n        AS_COMPLETE(as, true);\n      });\n    } catch (error) {\n      AS_COMPLETE(as, false, /** @type {?} */error);\n    }\n    return as;\n  }\n  /**\r\n   * play\r\n   * @return {?} AsyncSubject\r\n   */\n  play() {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    if (this.isPause) {\n      this.video.nativeElement.play();\n      this.requestAnimationFrame();\n      AS_COMPLETE(as, true);\n    } else {\n      AS_COMPLETE(as, false);\n    }\n    return as;\n  }\n  /**\r\n   * pause\r\n   * @return {?} AsyncSubject\r\n   */\n  pause() {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    if (this.isStart) {\n      clearInterval(this.rAF_ID);\n      this.video.nativeElement.pause();\n      AS_COMPLETE(as, true);\n    } else {\n      AS_COMPLETE(as, false);\n    }\n    return as;\n  }\n  /**\r\n   * loadImage\r\n   * @param {?} src\r\n   * @return {?} AsyncSubject\r\n   */\n  loadImage(src) {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    // Loading on\n    this.status(false, true);\n    // Set the src of this Image object.\n    /** @type {?} */\n    const image = new Image();\n    // Setting cross origin value to anonymous\n    image.setAttribute('crossOrigin', 'anonymous');\n    // When our image has loaded.\n    image.onload =\n    /**\r\n    * @return {?}\r\n    */\n    () => {\n      this.drawImage(image,\n      /**\r\n      * @param {?} flag\r\n      * @return {?}\r\n      */\n      flag => {\n        this.status(false, false);\n        AS_COMPLETE(as, flag);\n      });\n    };\n    // Set src\n    image.src = src;\n    return as;\n  }\n  /**\r\n   * torcher\r\n   * @return {?} AsyncSubject\r\n   */\n  torcher() {\n    /** @type {?} */\n    const as = this.applyConstraints({\n      torch: this.isTorch\n    });\n    as.subscribe(\n    /**\r\n    * @return {?}\r\n    */\n    () => false,\n    /**\r\n    * @return {?}\r\n    */\n    () => this.isTorch = !this.isTorch);\n    return as;\n  }\n  /**\r\n   * applyConstraints\r\n   * @param {?} constraints\r\n   * @return {?} AsyncSubject\r\n   */\n  applyConstraints(constraints) {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    /** @type {?} */\n    const stream = /** @type {?} */this.video.nativeElement.srcObject;\n    /** @type {?} */\n    const videoTrack = /** @type {?} */stream.getVideoTracks()[0];\n    /** @type {?} */\n    const imageCapture = new /** @type {?} */window.ImageCapture(videoTrack);\n    imageCapture.getPhotoCapabilities().then(\n    /**\r\n    * @return {?}\r\n    */\n    () => __awaiter(this, void 0, void 0, function* () {\n      yield videoTrack.applyConstraints( /** @type {?} */{\n        advanced: [constraints]\n      });\n      AS_COMPLETE(as, true);\n    })).catch(\n    /**\r\n    * @param {?} error\r\n    * @return {?}\r\n    */\n    error => {\n      switch (error && error.name) {\n        case 'NotFoundError':\n        case 'DevicesNotFoundError':\n          AS_COMPLETE(as, false, /** @type {?} */'Required track is missing');\n          break;\n        case 'NotReadableError':\n        case 'TrackStartError':\n          AS_COMPLETE(as, false, /** @type {?} */'Webcam or mic are already in use');\n          break;\n        case 'OverconstrainedError':\n        case 'ConstraintNotSatisfiedError':\n          AS_COMPLETE(as, false, /** @type {?} */'Constraints can not be satisfied by avb. devices');\n          break;\n        case 'NotAllowedError':\n        case 'PermissionDeniedError':\n          AS_COMPLETE(as, false, /** @type {?} */'Permission denied in browser');\n          break;\n        case 'TypeError':\n          AS_COMPLETE(as, false, /** @type {?} */'Empty constraints object');\n          break;\n        default:\n          AS_COMPLETE(as, false, /** @type {?} */error);\n          break;\n      }\n    });\n    return as;\n  }\n  /**\r\n   * getConstraints\r\n   * @return {?}\r\n   */\n  getConstraints() {\n    /** @type {?} */\n    const stream = /** @type {?} */this.video.nativeElement.srcObject;\n    /** @type {?} */\n    const videoTrack = stream && /** @type {?} */stream.getVideoTracks()[0];\n    return videoTrack && /** @type {?} */videoTrack.getConstraints();\n  }\n  /**\r\n   * download\r\n   * @param {?=} fileName\r\n   * @return {?} AsyncSubject\r\n   */\n  download(fileName = `ngx-scanner-qrcode-${Date.now()}.png`) {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    /** @type {?} */\n    const run =\n    /**\r\n    * @return {?}\r\n    */\n    () => __awaiter(this, void 0, void 0, function* () {\n      /** @type {?} */\n      const blob = yield CANVAS_TO_BLOB(this.canvas.nativeElement);\n      /** @type {?} */\n      const file = BLOB_TO_FILE(blob, fileName);\n      FILES_TO_SCAN([file], this.config, as).subscribe(\n      /**\r\n      * @param {?} res\r\n      * @return {?}\r\n      */\n      res => {\n        res.forEach(\n        /**\r\n        * @param {?} item\r\n        * @return {?}\r\n        */\n        item => {\n          /** @type {?} */\n          const link = document.createElement('a');\n          link.href = item.url;\n          link.download = item.name;\n          link.click();\n          link.remove();\n        });\n      });\n    });\n    run();\n    return as;\n  }\n  /**\r\n   * window: resize\r\n   * Draw again!\r\n   * @private\r\n   * @return {?}\r\n   */\n  resize() {\n    window.addEventListener(\"resize\",\n    /**\r\n    * @return {?}\r\n    */\n    () => {\n      if (this.dataForResize && this.dataForResize.length) {\n        DRAW_RESULT_APPEND_CHILD( /** @type {?} */this.dataForResize, this.canvas.nativeElement, this.resultsPanel.nativeElement);\n      }\n    });\n  }\n  /**\r\n   * Override config\r\n   * @private\r\n   * @return {?} void\r\n   */\n  overrideConfig() {\n    if (HAS_OWN_PROPERTY(this.config, 'src')) this.src = this.config.src;\n    if (HAS_OWN_PROPERTY(this.config, 'fps')) this.fps = this.config.fps;\n    if (HAS_OWN_PROPERTY(this.config, 'vibrate')) this.vibrate = this.config.vibrate;\n    if (HAS_OWN_PROPERTY(this.config, 'decode')) this.decode = this.config.decode;\n    if (HAS_OWN_PROPERTY(this.config, 'isBeep')) this.isBeep = this.config.isBeep;\n    if (HAS_OWN_PROPERTY(this.config, 'deviceActive')) this.deviceActive = this.config.deviceActive;\n    if (HAS_OWN_PROPERTY(this.config, 'constraints')) this.constraints = OVERRIDES('constraints', this.config, MEDIA_STREAM_DEFAULT);\n  }\n  /**\r\n   * loadAllDevices\r\n   * @private\r\n   * @param {?} as\r\n   * @return {?}\r\n   */\n  loadAllDevices(as) {\n    navigator.mediaDevices.enumerateDevices().then(\n    /**\r\n    * @param {?} devices\r\n    * @return {?}\r\n    */\n    devices => {\n      /** @type {?} */\n      let cameraDevices = [];\n      devices.forEach(\n      /**\r\n      * @param {?} f\r\n      * @return {?}\r\n      */\n      f => f.kind == 'videoinput' && cameraDevices.push(f));\n      this.devices.next(cameraDevices);\n      if (cameraDevices.length > 0) {\n        /** @type {?} */\n        const index = Math.max(0, cameraDevices.length > this.deviceActive ? this.deviceActive : 0);\n        this.playDevice(cameraDevices[index].deviceId, as);\n      } else {\n        AS_COMPLETE(as, false, /** @type {?} */'No camera detected.');\n      }\n    });\n  }\n  /**\r\n   * drawImage\r\n   * @private\r\n   * @param {?} element\r\n   * @param {?=} callback\r\n   * @return {?}\r\n   */\n  drawImage(element, callback =\n  /**\r\n  * @return {?}\r\n  */\n  () => {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Get the canvas element by using the getElementById method.\n      /** @type {?} */\n      const canvas = this.canvas.nativeElement;\n      // Get a 2D drawing context for the canvas.\n      /** @type {?} */\n      const ctx = /** @type {?} */canvas.getContext('2d', {\n        willReadFrequently: true\n      });\n      // HTMLImageElement size\n      if (element instanceof HTMLImageElement) {\n        canvas.width = element.naturalWidth;\n        canvas.height = element.naturalHeight;\n        element.style.visibility = '';\n        this.video.nativeElement.style.visibility = 'hidden';\n        this.video.nativeElement.style.height = canvas.offsetHeight + 'px';\n      }\n      // HTMLVideoElement size\n      if (element instanceof HTMLVideoElement) {\n        canvas.width = element.videoWidth;\n        canvas.height = element.videoHeight;\n        element.style.visibility = '';\n        this.canvas.nativeElement.style.visibility = 'hidden';\n      }\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      // Draw image\n      ctx.drawImage(element, 0, 0, canvas.width, canvas.height);\n      // Data image\n      /** @type {?} */\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      // Draw frame\n      /** @type {?} */\n      const code = yield zbarWasm.scanImageData(imageData);\n      if (code && code.length) {\n        // Decode\n        code.forEach(\n        /**\r\n        * @param {?} s\r\n        * @return {?}\r\n        */\n        s => s.value = s.decode(this.decode && this.decode.toLocaleLowerCase()));\n        // Overlay\n        DRAW_RESULT_APPEND_CHILD(code, Object.freeze(this.canvas.nativeElement), this.resultsPanel.nativeElement);\n        // To blob and emit data\n        /** @type {?} */\n        const EMIT_DATA =\n        /**\r\n        * @return {?}\r\n        */\n        () => {\n          this.eventEmit(code);\n          this.dataForResize = code;\n        };\n        // HTMLImageElement\n        if (element instanceof HTMLImageElement) {\n          callback(true);\n          EMIT_DATA();\n          VIBRATE(this.vibrate);\n          PLAY_AUDIO(this.isBeep);\n        }\n        // HTMLVideoElement\n        if (element instanceof HTMLVideoElement) {\n          EMIT_DATA();\n          VIBRATE(this.vibrate);\n          PLAY_AUDIO(this.isBeep);\n        }\n      } else {\n        callback(false);\n        this.removeCanvas();\n        this.dataForResize = code;\n      }\n    });\n  }\n  /**\r\n   * removeCanvas\r\n   * @private\r\n   * @return {?}\r\n   */\n  removeCanvas() {\n    Object.assign([], this.resultsPanel.nativeElement.childNodes).forEach(\n    /**\r\n    * @param {?} el\r\n    * @return {?}\r\n    */\n    el => this.resultsPanel.nativeElement.removeChild(el));\n  }\n  /**\r\n   * status\r\n   * @private\r\n   * @param {?} isStart\r\n   * @param {?} isLoading\r\n   * @return {?}\r\n   */\n  status(isStart, isLoading) {\n    this.isStart = isStart;\n    this.isLoading = isLoading;\n  }\n  /**\r\n   * eventEmit\r\n   * @private\r\n   * @param {?=} response\r\n   * @return {?}\r\n   */\n  eventEmit(response = false) {\n    response !== false && this.data.next(response || {\n      data: null\n    });\n    response !== false && this.event.emit(response || {\n      data: null\n    });\n  }\n  /**\r\n   * Single-thread\r\n   * Loop Recording on Camera\r\n   * Must be destroy request\r\n   * Not using: requestAnimationFrame\r\n   * @private\r\n   * @return {?}\r\n   */\n  requestAnimationFrame() {\n    this.rAF_ID = setInterval(\n    /**\r\n    * @return {?}\r\n    */\n    () => {\n      if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\n        this.drawImage(this.video.nativeElement);\n      }\n    }, this.fps);\n  }\n  /**\r\n   * Status of camera\r\n   * @return {?} boolean\r\n   */\n  get isPause() {\n    return this.isStart && this.video.nativeElement.paused;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  ngOnDestroy() {\n    this.pause();\n  }\n}\nNgxScannerQrcodeComponent.Éµfac = function NgxScannerQrcodeComponent_Factory(t) {\n  return new (t || NgxScannerQrcodeComponent)();\n};\nNgxScannerQrcodeComponent.Éµcmp = /*@__PURE__*/Éµngcc0.ÉµÉµdefineComponent({\n  type: NgxScannerQrcodeComponent,\n  selectors: [[\"ngx-scanner-qrcode\"]],\n  viewQuery: function NgxScannerQrcodeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµviewQuery(_c0, 5);\n      Éµngcc0.ÉµÉµviewQuery(_c1, 5);\n      Éµngcc0.ÉµÉµviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.video = _t.first);\n      Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.canvas = _t.first);\n      Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.resultsPanel = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ngx-scanner-qrcode\"],\n  inputs: {\n    src: \"src\",\n    fps: \"fps\",\n    vibrate: \"vibrate\",\n    decode: \"decode\",\n    isBeep: \"isBeep\",\n    deviceActive: \"deviceActive\",\n    config: \"config\",\n    constraints: \"constraints\"\n  },\n  outputs: {\n    event: \"event\"\n  },\n  exportAs: [\"scanner\"],\n  decls: 6,\n  vars: 0,\n  consts: [[1, \"origin-overlay\"], [\"resultsPanel\", \"\"], [1, \"origin-canvas\"], [\"canvas\", \"\"], [\"playsinline\", \"\", 1, \"origin-video\"], [\"video\", \"\"]],\n  template: function NgxScannerQrcodeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµelement(0, \"div\", 0, 1)(2, \"canvas\", 2, 3)(4, \"video\", 4, 5);\n    }\n  },\n  styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;color:red;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute}.qrcode-tooltip-temp{bottom:0;left:50%;padding:5px;color:#fff;text-align:left;display:none;max-width:450px;border-radius:5px;width:-moz-max-content;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}\"],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(NgxScannerQrcodeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-scanner-qrcode',\n      template: `<div #resultsPanel class=\"origin-overlay\"></div><canvas #canvas class=\"origin-canvas\"></canvas><video #video playsinline class=\"origin-video\"></video>`,\n      host: {\n        'class': 'ngx-scanner-qrcode'\n      },\n      exportAs: 'scanner',\n      inputs: ['src', 'fps', 'vibrate', 'decode', 'isBeep', 'deviceActive', 'config', 'constraints'],\n      outputs: ['event'],\n      queries: {\n        video: new ViewChild('video'),\n        canvas: new ViewChild('canvas'),\n        resultsPanel: new ViewChild('resultsPanel')\n      },\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;color:red;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute}.qrcode-tooltip-temp{bottom:0;left:50%;padding:5px;color:#fff;text-align:left;display:none;max-width:450px;border-radius:5px;width:-moz-max-content;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}\"]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n/** @enum {number} */\nconst ScannerQRCodeSymbolType = {\n  ScannerQRCode_NONE: 0,\n  ScannerQRCode_PARTIAL: 1,\n  ScannerQRCode_EAN2: 2,\n  ScannerQRCode_EAN5: 5,\n  ScannerQRCode_EAN8: 8,\n  ScannerQRCode_UPCE: 9,\n  ScannerQRCode_ISBN10: 10,\n  ScannerQRCode_UPCA: 12,\n  ScannerQRCode_EAN13: 13,\n  ScannerQRCode_ISBN13: 14,\n  ScannerQRCode_COMPOSITE: 15,\n  ScannerQRCode_I25: 25,\n  ScannerQRCode_DATABAR: 34,\n  ScannerQRCode_DATABAR_EXP: 35,\n  ScannerQRCode_CODABAR: 38,\n  ScannerQRCode_CODE39: 39,\n  ScannerQRCode_PDF417: 57,\n  ScannerQRCode_QRCODE: 64,\n  ScannerQRCode_SQCODE: 80,\n  ScannerQRCode_CODE93: 93,\n  ScannerQRCode_CODE128: 128,\n  /*\r\n   * Please see _ScannerQRCode_get_symbol_hash() if adding\r\n   * anything after 128\r\n   */\n  /** mask for base symbol type.\r\n   * @deprecated in 0.11, remove this from existing code\r\n   */\n  ScannerQRCode_SYMBOL: 255,\n  /** 2-digit add-on flag.\r\n   * @deprecated in 0.11, a ::ScannerQRCode_EAN2 component is used for\r\n   * 2-digit GS1 add-ons\r\n   */\n  ScannerQRCode_ADDON2: 512,\n  /** 5-digit add-on flag.\r\n   * @deprecated in 0.11, a ::ScannerQRCode_EAN5 component is used for\r\n   * 5-digit GS1 add-ons\r\n   */\n  ScannerQRCode_ADDON5: 1280,\n  /** add-on flag mask.\r\n   * @deprecated in 0.11, GS1 add-ons are represented using composite\r\n   * symbols of type ::ScannerQRCode_COMPOSITE; add-on components use ::ScannerQRCode_EAN2\r\n   * or ::ScannerQRCode_EAN5\r\n   */\n  ScannerQRCode_ADDON: 1792\n};\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_NONE] = 'ScannerQRCode_NONE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_PARTIAL] = 'ScannerQRCode_PARTIAL';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN2] = 'ScannerQRCode_EAN2';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN5] = 'ScannerQRCode_EAN5';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN8] = 'ScannerQRCode_EAN8';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_UPCE] = 'ScannerQRCode_UPCE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ISBN10] = 'ScannerQRCode_ISBN10';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_UPCA] = 'ScannerQRCode_UPCA';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN13] = 'ScannerQRCode_EAN13';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ISBN13] = 'ScannerQRCode_ISBN13';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_COMPOSITE] = 'ScannerQRCode_COMPOSITE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_I25] = 'ScannerQRCode_I25';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_DATABAR] = 'ScannerQRCode_DATABAR';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_DATABAR_EXP] = 'ScannerQRCode_DATABAR_EXP';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODABAR] = 'ScannerQRCode_CODABAR';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE39] = 'ScannerQRCode_CODE39';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_PDF417] = 'ScannerQRCode_PDF417';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_QRCODE] = 'ScannerQRCode_QRCODE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_SQCODE] = 'ScannerQRCode_SQCODE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE93] = 'ScannerQRCode_CODE93';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE128] = 'ScannerQRCode_CODE128';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_SYMBOL] = 'ScannerQRCode_SYMBOL';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON2] = 'ScannerQRCode_ADDON2';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON5] = 'ScannerQRCode_ADDON5';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON] = 'ScannerQRCode_ADDON';\n/** @enum {number} */\nconst ScannerQRCodeConfigType = {\n  ScannerQRCode_CFG_ENABLE: 0,\n  ScannerQRCode_CFG_ADD_CHECK: 1,\n  ScannerQRCode_CFG_EMIT_CHECK: 2,\n  ScannerQRCode_CFG_ASCII: 3,\n  ScannerQRCode_CFG_BINARY: 4,\n  ScannerQRCode_CFG_NUM: 5,\n  ScannerQRCode_CFG_MIN_LEN: 32,\n  ScannerQRCode_CFG_MAX_LEN: 33,\n  ScannerQRCode_CFG_UNCERTAINTY: 64,\n  ScannerQRCode_CFG_POSITION: 128,\n  ScannerQRCode_CFG_TEST_INVERTED: 129,\n  ScannerQRCode_CFG_X_DENSITY: 256,\n  ScannerQRCode_CFG_Y_DENSITY: 257\n};\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ENABLE] = 'ScannerQRCode_CFG_ENABLE';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ADD_CHECK] = 'ScannerQRCode_CFG_ADD_CHECK';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_EMIT_CHECK] = 'ScannerQRCode_CFG_EMIT_CHECK';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ASCII] = 'ScannerQRCode_CFG_ASCII';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_BINARY] = 'ScannerQRCode_CFG_BINARY';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_NUM] = 'ScannerQRCode_CFG_NUM';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_MIN_LEN] = 'ScannerQRCode_CFG_MIN_LEN';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_MAX_LEN] = 'ScannerQRCode_CFG_MAX_LEN';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_UNCERTAINTY] = 'ScannerQRCode_CFG_UNCERTAINTY';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_POSITION] = 'ScannerQRCode_CFG_POSITION';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_TEST_INVERTED] = 'ScannerQRCode_CFG_TEST_INVERTED';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_X_DENSITY] = 'ScannerQRCode_CFG_X_DENSITY';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_Y_DENSITY] = 'ScannerQRCode_CFG_Y_DENSITY';\n/** @enum {number} */\nconst ScannerQRCodeOrientation = {\n  ScannerQRCode_ORIENT_UNKNOWN: -1,\n  ScannerQRCode_ORIENT_UP: 0,\n  ScannerQRCode_ORIENT_RIGHT: 1,\n  ScannerQRCode_ORIENT_DOWN: 2,\n  ScannerQRCode_ORIENT_LEFT: 3\n};\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_UNKNOWN] = 'ScannerQRCode_ORIENT_UNKNOWN';\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_UP] = 'ScannerQRCode_ORIENT_UP';\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_RIGHT] = 'ScannerQRCode_ORIENT_RIGHT';\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_DOWN] = 'ScannerQRCode_ORIENT_DOWN';\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_LEFT] = 'ScannerQRCode_ORIENT_LEFT';\nclass ScannerQRCodeTypePointer {\n  /**\r\n   * @param {?} ptr\r\n   * @param {?} buf\r\n   */\n  constructor(ptr, buf) {\n    this.ptr = ptr;\n    this.ptr32 = ptr >> 2;\n    this.buf = buf;\n    this.HEAP8 = new Int8Array(buf);\n    this.HEAPU32 = new Uint32Array(buf);\n    this.HEAP32 = new Int32Array(buf);\n  }\n}\nclass ScannerQRCodeSymbolPtr extends ScannerQRCodeTypePointer {\n  /**\r\n   * @return {?}\r\n   */\n  get type() {\n    return (/** @type {?} */this.HEAPU32[this.ptr32]\n    );\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get data() {\n    /** @type {?} */\n    const len = this.HEAPU32[this.ptr32 + 4];\n    /** @type {?} */\n    const ptr = this.HEAPU32[this.ptr32 + 5];\n    return Int8Array.from(this.HEAP8.subarray(ptr, ptr + len));\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get points() {\n    /** @type {?} */\n    const len = this.HEAPU32[this.ptr32 + 7];\n    /** @type {?} */\n    const ptr = this.HEAPU32[this.ptr32 + 8];\n    /** @type {?} */\n    const ptr32 = ptr >> 2;\n    /** @type {?} */\n    const res = [];\n    for (let i = 0; i < len; ++i) {\n      /** @type {?} */\n      const x = this.HEAP32[ptr32 + i * 2];\n      /** @type {?} */\n      const y = this.HEAP32[ptr32 + i * 2 + 1];\n      res.push( /** @type {?} */{\n        x,\n        y\n      });\n    }\n    return res;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get orientation() {\n    return this.HEAP32[this.ptr32 + 9];\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get next() {\n    /** @type {?} */\n    const ptr = this.HEAPU32[this.ptr32 + 11];\n    if (!ptr) return null;\n    return new ScannerQRCodeSymbolPtr(ptr, this.buf);\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get time() {\n    return this.HEAPU32[this.ptr32 + 13];\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get cacheCount() {\n    return this.HEAP32[this.ptr32 + 14];\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get quality() {\n    return this.HEAP32[this.ptr32 + 15];\n  }\n}\nclass SymbolSetPtr extends ScannerQRCodeTypePointer {\n  /**\r\n   * @return {?}\r\n   */\n  get head() {\n    /** @type {?} */\n    const ptr = this.HEAPU32[this.ptr32 + 2];\n    if (!ptr) return null;\n    return new ScannerQRCodeSymbolPtr(ptr, this.buf);\n  }\n}\nclass ScannerQRCodeResult {\n  /**\r\n   * @private\r\n   * @param {?} ptr\r\n   */\n  constructor(ptr) {\n    this.value = '';\n    this.type = ptr.type;\n    this.typeName = ScannerQRCodeSymbolType[this.type];\n    this.data = ptr.data;\n    this.points = ptr.points;\n    this.orientation = ptr.orientation;\n    this.time = ptr.time;\n    this.cacheCount = ptr.cacheCount;\n    this.quality = ptr.quality;\n  }\n  /**\r\n   * @param {?} ptr\r\n   * @param {?} buf\r\n   * @return {?}\r\n   */\n  static createSymbolsFromPtr(ptr, buf) {\n    if (ptr == 0) return [];\n    /** @type {?} */\n    const set = new SymbolSetPtr(ptr, buf);\n    /** @type {?} */\n    let symbol = set.head;\n    /** @type {?} */\n    const res = [];\n    while (symbol !== null) {\n      res.push(new ScannerQRCodeResult(symbol));\n      symbol = symbol.next;\n    }\n    return res;\n  }\n  /**\r\n   * @param {?=} encoding\r\n   * @return {?}\r\n   */\n  decode(encoding) {\n    /** @type {?} */\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(this.data);\n  }\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass NgxScannerQrcodeModule {}\nNgxScannerQrcodeModule.Éµfac = function NgxScannerQrcodeModule_Factory(t) {\n  return new (t || NgxScannerQrcodeModule)();\n};\nNgxScannerQrcodeModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: NgxScannerQrcodeModule\n});\nNgxScannerQrcodeModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({\n  providers: [NgxScannerQrcodeService]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(NgxScannerQrcodeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxScannerQrcodeComponent],\n      exports: [NgxScannerQrcodeComponent],\n      providers: [NgxScannerQrcodeService]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(NgxScannerQrcodeModule, {\n    declarations: [NgxScannerQrcodeComponent],\n    exports: [NgxScannerQrcodeComponent]\n  });\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxScannerQrcodeService, NgxScannerQrcodeComponent, ScannerQRCodeSymbolType, ScannerQRCodeConfigType, ScannerQRCodeOrientation, ScannerQRCodeResult, NgxScannerQrcodeModule };","map":{"version":3,"names":["__awaiter","AsyncSubject","BehaviorSubject","Injectable","NgModule","defineInjectable","EventEmitter","Component","ViewChild","ViewEncapsulation","Éµngcc0","_c0","_c1","_c2","MEDIA_STREAM_DEFAULT","audio","video","CONFIG_DEFAULT","src","fps","vibrate","decode","isBeep","deviceActive","constraints","OVERRIDES","variableKey","config","defaultConfig","Object","keys","length","key","cloneDeep","JSON","parse","stringify","assign","hasOwnProperty","AS_COMPLETE","as","data","error","next","complete","PLAY_AUDIO","isPlay","Audio","Array","join","oncanplaythrough","promise","play","catch","e","name","HAS_OWN_PROPERTY","obj","propertyPath","properties","split","i","prop","DRAW_RESULT_APPEND_CHILD","code","oriCanvas","elTarget","widthZoom","heightZoom","oriWidth","width","oriHeight","height","oriWHRatio","imgWidth","parseInt","getComputedStyle","imgHeight","imgWHRatio","innerHTML","_code","cvs","document","createElement","ctx","getContext","willReadFrequently","loc","X","Y","points","j","xj","x","yj","y","push","maxX","Math","max","minX","min","maxY","minY","setAttribute","style","top","left","lineWidth","strokeStyle","fillStyle","polygon","k","shape","slice","beginPath","moveTo","shift","lineTo","closePath","fill","stroke","qrcodeTooltipTemp","innerText","value","qrcodeTooltip","appendChild","fontSize","resultText","DRAW_RESULT_ON_CANVAS","font","FILL_TEXT_MULTI_LINE","READ_AS_DATA_URL","file","Promise","resolve","reject","fileReader","FileReader","onload","objectFile","url","URL","createObjectURL","image","Image","canvas","naturalWidth","naturalHeight","drawImage","imageData","getImageData","zbarWasm","scanImageData","forEach","s","toLocaleLowerCase","blob","CANVAS_TO_BLOB","blobToFile","theBlob","fileName","File","lastModified","Date","getTime","type","onerror","readAsDataURL","toBlob","BLOB_TO_FILE","FILES_TO_SCAN","files","configs","all","map","m","then","img","text","lineHeight","measureText","lines","fillText","strokeText","VIBRATE","time","IS_MOBILE","window","navigator","vendor","userAgent","test","substr","NgxScannerQrcodeService","loadFiles","loadFilesToScan","Éµfac","NgxScannerQrcodeService_Factory","t","Éµprov","ÉµÉµdefineInjectable","token","factory","providedIn","ngInjectableDef","ngDevMode","ÉµsetClassMetadata","args","NgxScannerQrcodeComponent","constructor","event","isStart","isLoading","isTorch","devices","dataForResize","ngOnInit","overrideConfig","loadImage","resize","start","loadAllDevices","playDevice","deviceId","existDeviceId","getConstraints","stop","clearInterval","rAF_ID","status","findIndex","f","mediaDevices","getUserMedia","stream","nativeElement","srcObject","onloadedmetadata","requestAnimationFrame","eventEmit","removeCanvas","getTracks","track","isPause","pause","flag","torcher","applyConstraints","torch","subscribe","videoTrack","getVideoTracks","imageCapture","ImageCapture","getPhotoCapabilities","advanced","download","now","run","res","item","link","href","click","remove","addEventListener","resultsPanel","enumerateDevices","cameraDevices","kind","index","element","callback","HTMLImageElement","visibility","offsetHeight","HTMLVideoElement","videoWidth","videoHeight","clearRect","freeze","EMIT_DATA","childNodes","el","removeChild","response","emit","setInterval","readyState","HAVE_ENOUGH_DATA","paused","ngOnDestroy","NgxScannerQrcodeComponent_Factory","Éµcmp","ÉµÉµdefineComponent","selectors","viewQuery","NgxScannerQrcodeComponent_Query","rf","ÉµÉµviewQuery","_t","ÉµÉµqueryRefresh","ÉµÉµloadQuery","first","hostAttrs","inputs","outputs","exportAs","decls","vars","consts","template","NgxScannerQrcodeComponent_Template","ÉµÉµelement","styles","encapsulation","selector","host","queries","None","ScannerQRCodeSymbolType","ScannerQRCode_NONE","ScannerQRCode_PARTIAL","ScannerQRCode_EAN2","ScannerQRCode_EAN5","ScannerQRCode_EAN8","ScannerQRCode_UPCE","ScannerQRCode_ISBN10","ScannerQRCode_UPCA","ScannerQRCode_EAN13","ScannerQRCode_ISBN13","ScannerQRCode_COMPOSITE","ScannerQRCode_I25","ScannerQRCode_DATABAR","ScannerQRCode_DATABAR_EXP","ScannerQRCode_CODABAR","ScannerQRCode_CODE39","ScannerQRCode_PDF417","ScannerQRCode_QRCODE","ScannerQRCode_SQCODE","ScannerQRCode_CODE93","ScannerQRCode_CODE128","ScannerQRCode_SYMBOL","ScannerQRCode_ADDON2","ScannerQRCode_ADDON5","ScannerQRCode_ADDON","ScannerQRCodeConfigType","ScannerQRCode_CFG_ENABLE","ScannerQRCode_CFG_ADD_CHECK","ScannerQRCode_CFG_EMIT_CHECK","ScannerQRCode_CFG_ASCII","ScannerQRCode_CFG_BINARY","ScannerQRCode_CFG_NUM","ScannerQRCode_CFG_MIN_LEN","ScannerQRCode_CFG_MAX_LEN","ScannerQRCode_CFG_UNCERTAINTY","ScannerQRCode_CFG_POSITION","ScannerQRCode_CFG_TEST_INVERTED","ScannerQRCode_CFG_X_DENSITY","ScannerQRCode_CFG_Y_DENSITY","ScannerQRCodeOrientation","ScannerQRCode_ORIENT_UNKNOWN","ScannerQRCode_ORIENT_UP","ScannerQRCode_ORIENT_RIGHT","ScannerQRCode_ORIENT_DOWN","ScannerQRCode_ORIENT_LEFT","ScannerQRCodeTypePointer","ptr","buf","ptr32","HEAP8","Int8Array","HEAPU32","Uint32Array","HEAP32","Int32Array","ScannerQRCodeSymbolPtr","len","from","subarray","orientation","cacheCount","quality","SymbolSetPtr","head","ScannerQRCodeResult","typeName","createSymbolsFromPtr","set","symbol","encoding","decoder","TextDecoder","NgxScannerQrcodeModule","NgxScannerQrcodeModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","providers","declarations","exports","ngJitMode","ÉµÉµsetNgModuleScope"],"sources":["D:/wamp64/www/warehouseMicroService/warehouseUi0/node_modules/ngx-scanner-qrcode/__ivy_ngcc__/fesm2015/ngx-scanner-qrcode.js"],"sourcesContent":["import { __awaiter } from 'tslib';\nimport { AsyncSubject, BehaviorSubject } from 'rxjs';\nimport { Injectable, NgModule, defineInjectable, EventEmitter, Component, ViewChild, ViewEncapsulation } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nimport * as Éµngcc0 from '@angular/core';\n\nconst _c0 = [\"video\"];\nconst _c1 = [\"canvas\"];\nconst _c2 = [\"resultsPanel\"];\nconst MEDIA_STREAM_DEFAULT = {\r\n    audio: false,\r\n    video: true\r\n};\r\n/** @type {?} */\r\nconst CONFIG_DEFAULT = {\r\n    src: '',\r\n    fps: 30,\r\n    vibrate: 300,\r\n    decode: 'utf-8',\r\n    isBeep: true,\r\n    deviceActive: 0,\r\n    constraints: MEDIA_STREAM_DEFAULT,\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * OVERRIDES\r\n * \\@param variableKey\r\n * \\@param config\r\n * \\@param defaultConfig\r\n * \\@return\r\n * @type {?}\r\n */\r\nconst OVERRIDES = (/**\r\n * @param {?} variableKey\r\n * @param {?} config\r\n * @param {?} defaultConfig\r\n * @return {?}\r\n */\r\n(variableKey, config, defaultConfig) => {\r\n    if (config && Object.keys(config[variableKey]).length) {\r\n        for (const key in defaultConfig) {\r\n            /** @type {?} */\r\n            const cloneDeep = JSON.parse(JSON.stringify(Object.assign({}, config[variableKey], { [key]: ((/** @type {?} */ (defaultConfig)))[key] })));\r\n            config[variableKey] = config[variableKey].hasOwnProperty(key) ? config[variableKey] : cloneDeep;\r\n        }\r\n        return config[variableKey];\r\n    }\r\n    else {\r\n        return defaultConfig;\r\n    }\r\n});\r\n/**\r\n * Rxjs complete\r\n * \\@param as\r\n * \\@param data\r\n * \\@param error\r\n * @type {?}\r\n */\r\nconst AS_COMPLETE = (/**\r\n * @param {?} as\r\n * @param {?} data\r\n * @param {?=} error\r\n * @return {?}\r\n */\r\n(as, data, error = null) => {\r\n    error ? as.error(error) : as.next(data);\r\n    as.complete();\r\n});\r\n/**\r\n * CAMERA_BEEP\r\n * \\@param isPlay\r\n * \\@return\r\n * @type {?}\r\n */\r\nconst PLAY_AUDIO = (/**\r\n * @param {?=} isPlay\r\n * @return {?}\r\n */\r\n(isPlay = false) => {\r\n    if (isPlay === false)\r\n        return;\r\n    /** @type {?} */\r\n    const audio = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU' + Array(300).join('101'));\r\n    // when the sound has been loaded, execute your code\r\n    audio.oncanplaythrough = (/**\r\n     * @return {?}\r\n     */\r\n    () => {\r\n        /** @type {?} */\r\n        const promise = audio.play();\r\n        if (promise) {\r\n            promise.catch((/**\r\n             * @param {?} e\r\n             * @return {?}\r\n             */\r\n            (e) => {\r\n                if (e.name === \"NotAllowedError\" || e.name === \"NotSupportedError\") ;\r\n            }));\r\n        }\r\n    });\r\n});\r\n/**\r\n * HAS_OWN_PROPERTY\r\n * Fix issue vs ng v 6-7-8\r\n * Optional chaining (?.) just have on ng v 9++\r\n * eg: HAS_OWN_PROPERTY(config, 'frameOptions.style') // output: boolean\r\n * \\@param obj\r\n * \\@param propertyPath\r\n * \\@return\r\n * @type {?}\r\n */\r\nconst HAS_OWN_PROPERTY = (/**\r\n * @param {?} obj\r\n * @param {?} propertyPath\r\n * @return {?}\r\n */\r\n(obj, propertyPath) => {\r\n    /** @type {?} */\r\n    const properties = propertyPath.split(\".\");\r\n    for (let i = 0; i < properties.length; i++) {\r\n        /** @type {?} */\r\n        let prop = properties[i];\r\n        if (!obj.hasOwnProperty(prop)) {\r\n            return false;\r\n        }\r\n        else {\r\n            obj = obj[prop];\r\n        }\r\n    }\r\n    return true;\r\n});\r\n/**\r\n * DRAW_RESULT_APPEND_CHILD\r\n * \\@param code\r\n * \\@param oriCanvas\r\n * \\@param elTarget\r\n * @type {?}\r\n */\r\nconst DRAW_RESULT_APPEND_CHILD = (/**\r\n * @param {?} code\r\n * @param {?} oriCanvas\r\n * @param {?} elTarget\r\n * @return {?}\r\n */\r\n(code, oriCanvas, elTarget) => {\r\n    /** @type {?} */\r\n    let widthZoom;\r\n    /** @type {?} */\r\n    let heightZoom;\r\n    /** @type {?} */\r\n    let oriWidth = oriCanvas.width;\r\n    /** @type {?} */\r\n    let oriHeight = oriCanvas.height;\r\n    /** @type {?} */\r\n    let oriWHRatio = oriWidth / oriHeight;\r\n    /** @type {?} */\r\n    let imgWidth = parseInt(getComputedStyle(oriCanvas).width);\r\n    /** @type {?} */\r\n    let imgHeight = parseInt(getComputedStyle(oriCanvas).height);\r\n    /** @type {?} */\r\n    let imgWHRatio = imgWidth / imgHeight;\r\n    elTarget.innerHTML = '';\r\n    if (oriWHRatio > imgWHRatio) {\r\n        widthZoom = imgWidth / oriWidth;\r\n        heightZoom = imgWidth / oriWHRatio / oriHeight;\r\n    }\r\n    else {\r\n        heightZoom = imgHeight / oriHeight;\r\n        widthZoom = (imgHeight * oriWHRatio) / oriWidth;\r\n    }\r\n    for (let i = 0; i < code.length; i++) {\r\n        /** @type {?} */\r\n        const _code = code[i];\r\n        // New canvas\r\n        /** @type {?} */\r\n        let cvs = document.createElement(\"canvas\");\r\n        /** @type {?} */\r\n        let ctx = (/** @type {?} */ (cvs.getContext('2d', { willReadFrequently: true })));\r\n        /** @type {?} */\r\n        let loc = {};\r\n        /** @type {?} */\r\n        let X = [];\r\n        /** @type {?} */\r\n        let Y = [];\r\n        // Point x,y\r\n        /** @type {?} */\r\n        const points = _code.points;\r\n        for (let j = 0; j < points.length; j++) {\r\n            /** @type {?} */\r\n            const xj = HAS_OWN_PROPERTY(points, `${j}.x`) ? points[j].x : 0;\r\n            /** @type {?} */\r\n            const yj = HAS_OWN_PROPERTY(points, `${j}.y`) ? points[j].y : 0;\r\n            loc[`x${j + 1}`] = xj;\r\n            loc[`y${j + 1}`] = yj;\r\n            X.push(xj);\r\n            Y.push(yj);\r\n        }\r\n        // Min max\r\n        /** @type {?} */\r\n        let maxX = Math.max(...X);\r\n        /** @type {?} */\r\n        let minX = Math.min(...X);\r\n        /** @type {?} */\r\n        let maxY = Math.max(...Y);\r\n        /** @type {?} */\r\n        let minY = Math.min(...Y);\r\n        // Add class\r\n        cvs.setAttribute('class', 'qrcode-polygon');\r\n        // Size with screen zoom\r\n        if (oriWHRatio > imgWHRatio) {\r\n            cvs.style.top = minY * heightZoom + (imgHeight - imgWidth / oriWHRatio) * 0.5 + \"px\";\r\n            cvs.style.left = minX * widthZoom + \"px\";\r\n            cvs.width = (maxX - minX) * widthZoom;\r\n            cvs.height = (maxY - minY) * widthZoom;\r\n        }\r\n        else {\r\n            cvs.style.top = minY * heightZoom + \"px\";\r\n            cvs.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n            cvs.width = (maxX - minX) * heightZoom;\r\n            cvs.height = (maxY - minY) * heightZoom;\r\n        }\r\n        // Style for canvas\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = 'green';\r\n        ctx.fillStyle = \"#55f02880\";\r\n        // polygon [x,y, x,y, x,y.....];\r\n        /** @type {?} */\r\n        const polygon = [];\r\n        for (let k = 0; k < X.length; k++) {\r\n            polygon.push((loc[`x${k + 1}`] - minX) * heightZoom);\r\n            polygon.push((loc[`y${k + 1}`] - minY) * widthZoom);\r\n        }\r\n        // Copy array\r\n        /** @type {?} */\r\n        const shape = (/** @type {?} */ (polygon.slice(0)));\r\n        // Draw polygon\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.shift(), shape.shift());\r\n        while (shape.length) {\r\n            ctx.lineTo(shape.shift(), shape.shift()); //x,y\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // Tooltip result\r\n        /** @type {?} */\r\n        const qrcodeTooltipTemp = document.createElement('div');\r\n        qrcodeTooltipTemp.setAttribute('class', 'qrcode-tooltip-temp');\r\n        qrcodeTooltipTemp.innerText = _code.value;\r\n        // Tooltip box\r\n        /** @type {?} */\r\n        const qrcodeTooltip = document.createElement('div');\r\n        qrcodeTooltip.setAttribute('class', 'qrcode-tooltip');\r\n        qrcodeTooltip.appendChild(qrcodeTooltipTemp);\r\n        heightZoom = imgHeight / oriHeight;\r\n        widthZoom = (imgHeight * oriWHRatio) / oriWidth;\r\n        qrcodeTooltip.style.fontSize = widthZoom * 15 + 'px';\r\n        qrcodeTooltip.style.top = minY * heightZoom + \"px\";\r\n        qrcodeTooltip.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n        qrcodeTooltip.style.width = (maxX - minX) * heightZoom + \"px\";\r\n        qrcodeTooltip.style.height = (maxY - minY) * heightZoom + \"px\";\r\n        // Result text\r\n        /** @type {?} */\r\n        const resultText = document.createElement('span');\r\n        resultText.innerText = _code.value;\r\n        resultText.style.fontSize = widthZoom * 13 + 'px';\r\n        // Set position result text\r\n        resultText.style.top = minY * heightZoom + (-20 * heightZoom) + \"px\";\r\n        resultText.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n        if (elTarget) {\r\n            elTarget.appendChild(qrcodeTooltip);\r\n            elTarget.appendChild(resultText);\r\n            elTarget.appendChild(cvs);\r\n        }\r\n    }\r\n})\r\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * @param code\r\n * @param cvs\r\n */\r\n;\r\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * \\@param code\r\n * \\@param cvs\r\n * @type {?}\r\n */\r\nconst DRAW_RESULT_ON_CANVAS = (/**\r\n * @param {?} code\r\n * @param {?} cvs\r\n * @return {?}\r\n */\r\n(code, cvs) => {\r\n    /** @type {?} */\r\n    let ctx = (/** @type {?} */ (cvs.getContext('2d', { willReadFrequently: true })));\r\n    for (let i = 0; i < code.length; i++) {\r\n        /** @type {?} */\r\n        const _code = code[i];\r\n        /** @type {?} */\r\n        let loc = {};\r\n        /** @type {?} */\r\n        let X = [];\r\n        /** @type {?} */\r\n        let Y = [];\r\n        // Point x,y\r\n        /** @type {?} */\r\n        const points = _code.points;\r\n        for (let j = 0; j < points.length; j++) {\r\n            /** @type {?} */\r\n            const xj = HAS_OWN_PROPERTY(points, `${j}.x`) ? points[j].x : 0;\r\n            /** @type {?} */\r\n            const yj = HAS_OWN_PROPERTY(points, `${j}.y`) ? points[j].y : 0;\r\n            loc[`x${j + 1}`] = xj;\r\n            loc[`y${j + 1}`] = yj;\r\n            X.push(xj);\r\n            Y.push(yj);\r\n        }\r\n        // Min max\r\n        /** @type {?} */\r\n        let minX = Math.min(...X);\r\n        /** @type {?} */\r\n        let minY = Math.min(...Y);\r\n        // Style for canvas\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = 'green';\r\n        ctx.fillStyle = \"#55f02880\";\r\n        ctx.font = \"15px serif\";\r\n        FILL_TEXT_MULTI_LINE(ctx, _code.value, minX, minY - 5);\r\n        // polygon [x,y, x,y, x,y.....];\r\n        /** @type {?} */\r\n        const polygon = [];\r\n        for (let k = 0; k < X.length; k++) {\r\n            polygon.push(loc[`x${k + 1}`]);\r\n            polygon.push(loc[`y${k + 1}`]);\r\n        }\r\n        // Copy array\r\n        /** @type {?} */\r\n        const shape = (/** @type {?} */ (polygon.slice(0)));\r\n        // Draw polygon\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.shift(), shape.shift());\r\n        while (shape.length) {\r\n            ctx.lineTo(shape.shift(), shape.shift()); //x,y\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    }\r\n})\r\n/**\r\n * READ_AS_DATA_URL\r\n * @param file\r\n * @param config\r\n * @return Promise\r\n */\r\n;\r\n/**\r\n * READ_AS_DATA_URL\r\n * \\@param file\r\n * \\@param config\r\n * \\@return Promise\r\n * @type {?}\r\n */\r\nconst READ_AS_DATA_URL = (/**\r\n * @param {?} file\r\n * @param {?} config\r\n * @return {?}\r\n */\r\n(file, config) => {\r\n    /**\r\n     * overrides *\r\n     * @type {?}\r\n     */\r\n    let decode = HAS_OWN_PROPERTY(config, 'decode') ? config.decode : CONFIG_DEFAULT.decode;\r\n    /** drawImage **/\r\n    return new Promise((/**\r\n     * @param {?} resolve\r\n     * @param {?} reject\r\n     * @return {?}\r\n     */\r\n    (resolve, reject) => {\r\n        /** @type {?} */\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            /** @type {?} */\r\n            const objectFile = {\r\n                name: file.name,\r\n                file: file,\r\n                url: URL.createObjectURL(file)\r\n            };\r\n            // Set the src of this Image object.\r\n            /** @type {?} */\r\n            const image = new Image();\r\n            // Setting cross origin value to anonymous\r\n            image.setAttribute('crossOrigin', 'anonymous');\r\n            // When our image has loaded.\r\n            image.onload = (/**\r\n             * @return {?}\r\n             */\r\n            () => __awaiter(this, void 0, void 0, function* () {\r\n                // Get the canvas element by using the getElementById method.\r\n                /** @type {?} */\r\n                const canvas = document.createElement('canvas');\r\n                // HTMLImageElement size\r\n                canvas.width = image.naturalWidth || image.width;\r\n                canvas.height = image.naturalHeight || image.height;\r\n                // Get a 2D drawing context for the canvas.\r\n                /** @type {?} */\r\n                const ctx = (/** @type {?} */ (canvas.getContext('2d')));\r\n                // Draw image\r\n                ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                // Data image\r\n                /** @type {?} */\r\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n                // Scanner\r\n                /** @type {?} */\r\n                const code = yield zbarWasm.scanImageData(imageData);\r\n                if (code && code.length) {\r\n                    // Decode\r\n                    code.forEach((/**\r\n                     * @param {?} s\r\n                     * @return {?}\r\n                     */\r\n                    (s) => s.value = s.decode(decode && decode.toLocaleLowerCase())));\r\n                    // Overlay\r\n                    DRAW_RESULT_ON_CANVAS(code, canvas);\r\n                    // Emit object\r\n                    /** @type {?} */\r\n                    const blob = yield CANVAS_TO_BLOB(canvas);\r\n                    /** @type {?} */\r\n                    const url = URL.createObjectURL(blob);\r\n                    /** @type {?} */\r\n                    const blobToFile = (/**\r\n                     * @param {?} theBlob\r\n                     * @param {?} fileName\r\n                     * @return {?}\r\n                     */\r\n                    (theBlob, fileName) => new File([theBlob], fileName, { lastModified: new Date().getTime(), type: theBlob.type }));\r\n                    resolve(Object.assign({}, objectFile, { data: code, url: url, canvas: canvas, file: blobToFile(blob, objectFile.name) }));\r\n                }\r\n                else {\r\n                    resolve(Object.assign({}, objectFile, { data: code, canvas: canvas }));\r\n                }\r\n            }));\r\n            // Set src\r\n            image.src = objectFile.url;\r\n        });\r\n        fileReader.onerror = (/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        (error) => reject(error));\r\n        fileReader.readAsDataURL(file);\r\n    }));\r\n})\r\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * @param canvas\r\n * @param type\r\n * @return Promise\r\n */\r\n;\r\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * \\@param canvas\r\n * \\@param type\r\n * \\@return Promise\r\n * @type {?}\r\n */\r\nconst CANVAS_TO_BLOB = (/**\r\n * @param {?} canvas\r\n * @param {?=} type\r\n * @return {?}\r\n */\r\n(canvas, type) => {\r\n    return new Promise((/**\r\n     * @param {?} resolve\r\n     * @param {?} reject\r\n     * @return {?}\r\n     */\r\n    (resolve, reject) => canvas.toBlob((/**\r\n     * @param {?} blob\r\n     * @return {?}\r\n     */\r\n    blob => resolve(blob)), type)));\r\n})\r\n/**\r\n * Convert blob to file\r\n * @param theBlob\r\n * @param fileName\r\n * @return File\r\n */\r\n;\r\n/**\r\n * Convert blob to file\r\n * \\@param theBlob\r\n * \\@param fileName\r\n * \\@return File\r\n * @type {?}\r\n */\r\nconst BLOB_TO_FILE = (/**\r\n * @param {?} theBlob\r\n * @param {?} fileName\r\n * @return {?}\r\n */\r\n(theBlob, fileName) => {\r\n    return new File([theBlob], fileName, { lastModified: new Date().getTime(), type: theBlob.type });\r\n})\r\n/**\r\n * FILES_TO_SCAN\r\n * @param files\r\n * @return AsyncSubject\r\n */\r\n;\r\n/**\r\n * FILES_TO_SCAN\r\n * \\@param files\r\n * \\@return AsyncSubject\r\n * @type {?}\r\n */\r\nconst FILES_TO_SCAN = (/**\r\n * @param {?=} files\r\n * @param {?=} configs\r\n * @param {?=} as\r\n * @return {?}\r\n */\r\n(files = [], configs, as = new AsyncSubject()) => {\r\n    Promise.all(Object.assign([], files).map((/**\r\n     * @param {?} m\r\n     * @return {?}\r\n     */\r\n    m => READ_AS_DATA_URL(m, configs)))).then((/**\r\n     * @param {?} img\r\n     * @return {?}\r\n     */\r\n    (img) => AS_COMPLETE(as, img))).catch((/**\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    (error) => AS_COMPLETE(as, null, error)));\r\n    return as;\r\n})\r\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * @param ctx\r\n * @param text\r\n * @param x\r\n * @param y\r\n */\r\n;\r\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * \\@param ctx\r\n * \\@param text\r\n * \\@param x\r\n * \\@param y\r\n * @type {?}\r\n */\r\nconst FILL_TEXT_MULTI_LINE = (/**\r\n * @param {?} ctx\r\n * @param {?} text\r\n * @param {?} x\r\n * @param {?} y\r\n * @return {?}\r\n */\r\n(ctx, text, x, y) => {\r\n    /** @type {?} */\r\n    let lineHeight = ctx.measureText(\"M\").width * 1.2;\r\n    /** @type {?} */\r\n    let lines = text.split(\"\\n\");\r\n    for (var i = 0; i < lines.length; ++i) {\r\n        ctx.fillText(lines[i], x, y);\r\n        ctx.strokeText(lines[i], x, y);\r\n        y += lineHeight;\r\n    }\r\n})\r\n/**\r\n * VIBRATE\r\n * Báº­t rung trÃªn mobile\r\n * @param time\r\n */\r\n;\r\n/**\r\n * VIBRATE\r\n * Báº­t rung trÃªn mobile\r\n * \\@param time\r\n * @type {?}\r\n */\r\nconst VIBRATE = (/**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    time && IS_MOBILE() && window.navigator.vibrate(time);\r\n});\r\n/**\r\n * IS_MOBILE\r\n * \\@return\r\n * @type {?}\r\n */\r\nconst IS_MOBILE = (/**\r\n * @return {?}\r\n */\r\n() => {\r\n    /** @type {?} */\r\n    const vendor = navigator.userAgent || navigator['vendor'] || window['opera'];\r\n    return !!(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(vendor) ||\r\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(vendor.substr(0, 4)));\r\n});\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxScannerQrcodeService {\r\n    /**\r\n     * Load files\r\n     * @param {?=} files\r\n     * @return {?} AsyncSubject\r\n     */\r\n    loadFiles(files = []) {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        Promise.all(Object.assign([], files).map((/**\r\n         * @param {?} m\r\n         * @return {?}\r\n         */\r\n        m => this.readAsDataURL(m)))).then((/**\r\n         * @param {?} img\r\n         * @return {?}\r\n         */\r\n        (img) => AS_COMPLETE(as, img))).catch((/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        (error) => AS_COMPLETE(as, null, error)));\r\n        return as;\r\n    }\r\n    /**\r\n     * loadFilesToScan\r\n     * @param {?=} files\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    loadFilesToScan(files = [], config) {\r\n        return FILES_TO_SCAN(files, config);\r\n    }\r\n    /**\r\n     * readAsDataURL\r\n     * @private\r\n     * @param {?} file\r\n     * @return {?} Promise\r\n     */\r\n    readAsDataURL(file) {\r\n        /** drawImage **/\r\n        return new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        (resolve, reject) => {\r\n            /** @type {?} */\r\n            const fileReader = new FileReader();\r\n            fileReader.onload = (/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                /** @type {?} */\r\n                const objectFile = {\r\n                    name: file.name,\r\n                    file: file,\r\n                    url: URL.createObjectURL(file)\r\n                };\r\n                resolve(objectFile);\r\n            });\r\n            fileReader.onerror = (/**\r\n             * @param {?} error\r\n             * @return {?}\r\n             */\r\n            (error) => reject(error));\r\n            fileReader.readAsDataURL(file);\r\n        }));\r\n    }\r\n}\nNgxScannerQrcodeService.Éµfac = function NgxScannerQrcodeService_Factory(t) { return new (t || NgxScannerQrcodeService)(); };\nNgxScannerQrcodeService.Éµprov = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjectable({ token: NgxScannerQrcodeService, factory: NgxScannerQrcodeService.Éµfac, providedIn: 'root' });\r\n/** @nocollapse */ NgxScannerQrcodeService.ngInjectableDef = defineInjectable({ factory: function NgxScannerQrcodeService_Factory() { return new NgxScannerQrcodeService(); }, token: NgxScannerQrcodeService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(NgxScannerQrcodeService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxScannerQrcodeComponent {\r\n    constructor() {\r\n        /**\r\n         * EventEmitter\r\n         */\r\n        this.event = new EventEmitter();\r\n        /**\r\n         * Input\r\n         */\r\n        this.src = CONFIG_DEFAULT.src;\r\n        this.fps = CONFIG_DEFAULT.fps;\r\n        this.vibrate = CONFIG_DEFAULT.vibrate;\r\n        this.decode = CONFIG_DEFAULT.decode;\r\n        this.isBeep = CONFIG_DEFAULT.isBeep;\r\n        this.deviceActive = CONFIG_DEFAULT.deviceActive;\r\n        this.config = CONFIG_DEFAULT;\r\n        this.constraints = CONFIG_DEFAULT.constraints;\r\n        /**\r\n         * Export\r\n         */\r\n        this.isStart = false;\r\n        this.isLoading = false;\r\n        this.isTorch = false;\r\n        this.data = new BehaviorSubject([]);\r\n        this.devices = new BehaviorSubject([]);\r\n        this.dataForResize = [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.overrideConfig();\r\n        if (this.src) {\r\n            this.loadImage(this.src);\r\n        }\r\n        this.resize();\r\n    }\r\n    /**\r\n     * start\r\n     * @return {?} AsyncSubject\r\n     */\r\n    start() {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        if (this.isStart) {\r\n            // Reject\r\n            AS_COMPLETE(as, false);\r\n        }\r\n        else {\r\n            // mediaDevices\r\n            this.loadAllDevices(as);\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * playDevice\r\n     * @param {?} deviceId\r\n     * @param {?=} as\r\n     * @return {?} AsyncSubject\r\n     */\r\n    playDevice(deviceId, as = new AsyncSubject()) {\r\n        /** @type {?} */\r\n        const existDeviceId = this.isStart ? this.getConstraints().deviceId != deviceId : true;\r\n        switch (true) {\r\n            case deviceId == 'null' || deviceId == null:\r\n                this.stop();\r\n                AS_COMPLETE(as, false);\r\n                break;\r\n            case deviceId && existDeviceId:\r\n                stop();\r\n                this.stop();\r\n                clearInterval(this.rAF_ID);\r\n                // Loading on\r\n                this.status(false, true);\r\n                /** @type {?} */\r\n                const constraints = {\r\n                    audio: false,\r\n                    video: (typeof (this.constraints && this.constraints.video) === 'boolean') ? { deviceId: deviceId } : Object.assign({ deviceId: deviceId }, this.constraints && this.constraints.video)\r\n                };\r\n                this.deviceActive = this.devices.value.findIndex((/**\r\n                 * @param {?} f\r\n                 * @return {?}\r\n                 */\r\n                f => f.deviceId == deviceId));\r\n                // MediaStream\r\n                navigator.mediaDevices.getUserMedia(constraints).then((/**\r\n                 * @param {?} stream\r\n                 * @return {?}\r\n                 */\r\n                (stream) => {\r\n                    this.video.nativeElement.srcObject = stream;\r\n                    this.video.nativeElement.onloadedmetadata = (/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        this.video.nativeElement.play();\r\n                        this.requestAnimationFrame();\r\n                        this.status(true, false);\r\n                        AS_COMPLETE(as, true);\r\n                    });\r\n                })).catch((/**\r\n                 * @param {?} error\r\n                 * @return {?}\r\n                 */\r\n                error => {\r\n                    this.status(false, false);\r\n                    this.eventEmit(false);\r\n                    AS_COMPLETE(as, false, error);\r\n                }));\r\n                break;\r\n            default:\r\n                AS_COMPLETE(as, false);\r\n                break;\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * stop\r\n     * @return {?} AsyncSubject\r\n     */\r\n    stop() {\r\n        this.eventEmit(null);\r\n        this.status(false, false);\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        try {\r\n            this.removeCanvas();\r\n            clearInterval(this.rAF_ID);\r\n            ((/** @type {?} */ (this.video.nativeElement.srcObject))).getTracks().forEach((/**\r\n             * @param {?} track\r\n             * @return {?}\r\n             */\r\n            (track) => {\r\n                track.stop();\r\n                AS_COMPLETE(as, true);\r\n            }));\r\n        }\r\n        catch (error) {\r\n            AS_COMPLETE(as, false, (/** @type {?} */ (error)));\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * play\r\n     * @return {?} AsyncSubject\r\n     */\r\n    play() {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        if (this.isPause) {\r\n            this.video.nativeElement.play();\r\n            this.requestAnimationFrame();\r\n            AS_COMPLETE(as, true);\r\n        }\r\n        else {\r\n            AS_COMPLETE(as, false);\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * pause\r\n     * @return {?} AsyncSubject\r\n     */\r\n    pause() {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        if (this.isStart) {\r\n            clearInterval(this.rAF_ID);\r\n            this.video.nativeElement.pause();\r\n            AS_COMPLETE(as, true);\r\n        }\r\n        else {\r\n            AS_COMPLETE(as, false);\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * loadImage\r\n     * @param {?} src\r\n     * @return {?} AsyncSubject\r\n     */\r\n    loadImage(src) {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        // Loading on\r\n        this.status(false, true);\r\n        // Set the src of this Image object.\r\n        /** @type {?} */\r\n        const image = new Image();\r\n        // Setting cross origin value to anonymous\r\n        image.setAttribute('crossOrigin', 'anonymous');\r\n        // When our image has loaded.\r\n        image.onload = (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.drawImage(image, (/**\r\n             * @param {?} flag\r\n             * @return {?}\r\n             */\r\n            (flag) => {\r\n                this.status(false, false);\r\n                AS_COMPLETE(as, flag);\r\n            }));\r\n        });\r\n        // Set src\r\n        image.src = src;\r\n        return as;\r\n    }\r\n    /**\r\n     * torcher\r\n     * @return {?} AsyncSubject\r\n     */\r\n    torcher() {\r\n        /** @type {?} */\r\n        const as = this.applyConstraints({ torch: this.isTorch });\r\n        as.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        () => false), (/**\r\n         * @return {?}\r\n         */\r\n        () => this.isTorch = !this.isTorch));\r\n        return as;\r\n    }\r\n    /**\r\n     * applyConstraints\r\n     * @param {?} constraints\r\n     * @return {?} AsyncSubject\r\n     */\r\n    applyConstraints(constraints) {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        /** @type {?} */\r\n        const stream = (/** @type {?} */ (this.video.nativeElement.srcObject));\r\n        /** @type {?} */\r\n        const videoTrack = (/** @type {?} */ (stream.getVideoTracks()[0]));\r\n        /** @type {?} */\r\n        const imageCapture = new ((/** @type {?} */ (window))).ImageCapture(videoTrack);\r\n        imageCapture.getPhotoCapabilities().then((/**\r\n         * @return {?}\r\n         */\r\n        () => __awaiter(this, void 0, void 0, function* () {\r\n            yield videoTrack.applyConstraints((/** @type {?} */ ({ advanced: [constraints] })));\r\n            AS_COMPLETE(as, true);\r\n        }))).catch((/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        (error) => {\r\n            switch (error && error.name) {\r\n                case 'NotFoundError':\r\n                case 'DevicesNotFoundError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Required track is missing')));\r\n                    break;\r\n                case 'NotReadableError':\r\n                case 'TrackStartError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Webcam or mic are already in use')));\r\n                    break;\r\n                case 'OverconstrainedError':\r\n                case 'ConstraintNotSatisfiedError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Constraints can not be satisfied by avb. devices')));\r\n                    break;\r\n                case 'NotAllowedError':\r\n                case 'PermissionDeniedError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Permission denied in browser')));\r\n                    break;\r\n                case 'TypeError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Empty constraints object')));\r\n                    break;\r\n                default:\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ (error)));\r\n                    break;\r\n            }\r\n        }));\r\n        return as;\r\n    }\r\n    ;\r\n    /**\r\n     * getConstraints\r\n     * @return {?}\r\n     */\r\n    getConstraints() {\r\n        /** @type {?} */\r\n        const stream = (/** @type {?} */ (this.video.nativeElement.srcObject));\r\n        /** @type {?} */\r\n        const videoTrack = stream && (/** @type {?} */ (stream.getVideoTracks()[0]));\r\n        return videoTrack && (/** @type {?} */ (videoTrack.getConstraints()));\r\n    }\r\n    /**\r\n     * download\r\n     * @param {?=} fileName\r\n     * @return {?} AsyncSubject\r\n     */\r\n    download(fileName = `ngx-scanner-qrcode-${Date.now()}.png`) {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        /** @type {?} */\r\n        const run = (/**\r\n         * @return {?}\r\n         */\r\n        () => __awaiter(this, void 0, void 0, function* () {\r\n            /** @type {?} */\r\n            const blob = yield CANVAS_TO_BLOB(this.canvas.nativeElement);\r\n            /** @type {?} */\r\n            const file = BLOB_TO_FILE(blob, fileName);\r\n            FILES_TO_SCAN([file], this.config, as).subscribe((/**\r\n             * @param {?} res\r\n             * @return {?}\r\n             */\r\n            (res) => {\r\n                res.forEach((/**\r\n                 * @param {?} item\r\n                 * @return {?}\r\n                 */\r\n                (item) => {\r\n                    /** @type {?} */\r\n                    const link = document.createElement('a');\r\n                    link.href = item.url;\r\n                    link.download = item.name;\r\n                    link.click();\r\n                    link.remove();\r\n                }));\r\n            }));\r\n        }));\r\n        run();\r\n        return as;\r\n    }\r\n    /**\r\n     * window: resize\r\n     * Draw again!\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    resize() {\r\n        window.addEventListener(\"resize\", (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (this.dataForResize && this.dataForResize.length) {\r\n                DRAW_RESULT_APPEND_CHILD((/** @type {?} */ (this.dataForResize)), this.canvas.nativeElement, this.resultsPanel.nativeElement);\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Override config\r\n     * @private\r\n     * @return {?} void\r\n     */\r\n    overrideConfig() {\r\n        if (HAS_OWN_PROPERTY(this.config, 'src'))\r\n            this.src = this.config.src;\r\n        if (HAS_OWN_PROPERTY(this.config, 'fps'))\r\n            this.fps = this.config.fps;\r\n        if (HAS_OWN_PROPERTY(this.config, 'vibrate'))\r\n            this.vibrate = this.config.vibrate;\r\n        if (HAS_OWN_PROPERTY(this.config, 'decode'))\r\n            this.decode = this.config.decode;\r\n        if (HAS_OWN_PROPERTY(this.config, 'isBeep'))\r\n            this.isBeep = this.config.isBeep;\r\n        if (HAS_OWN_PROPERTY(this.config, 'deviceActive'))\r\n            this.deviceActive = this.config.deviceActive;\r\n        if (HAS_OWN_PROPERTY(this.config, 'constraints'))\r\n            this.constraints = OVERRIDES('constraints', this.config, MEDIA_STREAM_DEFAULT);\r\n    }\r\n    /**\r\n     * loadAllDevices\r\n     * @private\r\n     * @param {?} as\r\n     * @return {?}\r\n     */\r\n    loadAllDevices(as) {\r\n        navigator.mediaDevices.enumerateDevices().then((/**\r\n         * @param {?} devices\r\n         * @return {?}\r\n         */\r\n        devices => {\r\n            /** @type {?} */\r\n            let cameraDevices = [];\r\n            devices.forEach((/**\r\n             * @param {?} f\r\n             * @return {?}\r\n             */\r\n            f => f.kind == 'videoinput' && cameraDevices.push(f)));\r\n            this.devices.next(cameraDevices);\r\n            if (cameraDevices.length > 0) {\r\n                /** @type {?} */\r\n                const index = Math.max(0, (cameraDevices.length > this.deviceActive ? this.deviceActive : 0));\r\n                this.playDevice(cameraDevices[index].deviceId, as);\r\n            }\r\n            else {\r\n                AS_COMPLETE(as, false, (/** @type {?} */ ('No camera detected.')));\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * drawImage\r\n     * @private\r\n     * @param {?} element\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\r\n    drawImage(element, callback = (/**\r\n     * @return {?}\r\n     */\r\n    () => { })) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Get the canvas element by using the getElementById method.\r\n            /** @type {?} */\r\n            const canvas = this.canvas.nativeElement;\r\n            // Get a 2D drawing context for the canvas.\r\n            /** @type {?} */\r\n            const ctx = (/** @type {?} */ (canvas.getContext('2d', { willReadFrequently: true })));\r\n            // HTMLImageElement size\r\n            if (element instanceof HTMLImageElement) {\r\n                canvas.width = element.naturalWidth;\r\n                canvas.height = element.naturalHeight;\r\n                element.style.visibility = '';\r\n                this.video.nativeElement.style.visibility = 'hidden';\r\n                this.video.nativeElement.style.height = canvas.offsetHeight + 'px';\r\n            }\r\n            // HTMLVideoElement size\r\n            if (element instanceof HTMLVideoElement) {\r\n                canvas.width = element.videoWidth;\r\n                canvas.height = element.videoHeight;\r\n                element.style.visibility = '';\r\n                this.canvas.nativeElement.style.visibility = 'hidden';\r\n            }\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            // Draw image\r\n            ctx.drawImage(element, 0, 0, canvas.width, canvas.height);\r\n            // Data image\r\n            /** @type {?} */\r\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n            // Draw frame\r\n            /** @type {?} */\r\n            const code = yield zbarWasm.scanImageData(imageData);\r\n            if (code && code.length) {\r\n                // Decode\r\n                code.forEach((/**\r\n                 * @param {?} s\r\n                 * @return {?}\r\n                 */\r\n                (s) => s.value = s.decode(this.decode && this.decode.toLocaleLowerCase())));\r\n                // Overlay\r\n                DRAW_RESULT_APPEND_CHILD(code, Object.freeze(this.canvas.nativeElement), this.resultsPanel.nativeElement);\r\n                // To blob and emit data\r\n                /** @type {?} */\r\n                const EMIT_DATA = (/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    this.eventEmit(code);\r\n                    this.dataForResize = code;\r\n                });\r\n                // HTMLImageElement\r\n                if (element instanceof HTMLImageElement) {\r\n                    callback(true);\r\n                    EMIT_DATA();\r\n                    VIBRATE(this.vibrate);\r\n                    PLAY_AUDIO(this.isBeep);\r\n                }\r\n                // HTMLVideoElement\r\n                if (element instanceof HTMLVideoElement) {\r\n                    EMIT_DATA();\r\n                    VIBRATE(this.vibrate);\r\n                    PLAY_AUDIO(this.isBeep);\r\n                }\r\n            }\r\n            else {\r\n                callback(false);\r\n                this.removeCanvas();\r\n                this.dataForResize = code;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * removeCanvas\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    removeCanvas() {\r\n        Object.assign([], this.resultsPanel.nativeElement.childNodes).forEach((/**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        el => this.resultsPanel.nativeElement.removeChild(el)));\r\n    }\r\n    /**\r\n     * status\r\n     * @private\r\n     * @param {?} isStart\r\n     * @param {?} isLoading\r\n     * @return {?}\r\n     */\r\n    status(isStart, isLoading) {\r\n        this.isStart = isStart;\r\n        this.isLoading = isLoading;\r\n    }\r\n    /**\r\n     * eventEmit\r\n     * @private\r\n     * @param {?=} response\r\n     * @return {?}\r\n     */\r\n    eventEmit(response = false) {\r\n        (response !== false) && this.data.next(response || { data: null });\r\n        (response !== false) && this.event.emit(response || { data: null });\r\n    }\r\n    /**\r\n     * Single-thread\r\n     * Loop Recording on Camera\r\n     * Must be destroy request\r\n     * Not using: requestAnimationFrame\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    requestAnimationFrame() {\r\n        this.rAF_ID = setInterval((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\r\n                this.drawImage(this.video.nativeElement);\r\n            }\r\n        }), this.fps);\r\n    }\r\n    /**\r\n     * Status of camera\r\n     * @return {?} boolean\r\n     */\r\n    get isPause() {\r\n        return this.isStart && this.video.nativeElement.paused;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.pause();\r\n    }\r\n}\nNgxScannerQrcodeComponent.Éµfac = function NgxScannerQrcodeComponent_Factory(t) { return new (t || NgxScannerQrcodeComponent)(); };\nNgxScannerQrcodeComponent.Éµcmp = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineComponent({ type: NgxScannerQrcodeComponent, selectors: [[\"ngx-scanner-qrcode\"]], viewQuery: function NgxScannerQrcodeComponent_Query(rf, ctx) { if (rf & 1) {\n        Éµngcc0.ÉµÉµviewQuery(_c0, 5);\n        Éµngcc0.ÉµÉµviewQuery(_c1, 5);\n        Éµngcc0.ÉµÉµviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.video = _t.first);\n        Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.canvas = _t.first);\n        Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.resultsPanel = _t.first);\n    } }, hostAttrs: [1, \"ngx-scanner-qrcode\"], inputs: { src: \"src\", fps: \"fps\", vibrate: \"vibrate\", decode: \"decode\", isBeep: \"isBeep\", deviceActive: \"deviceActive\", config: \"config\", constraints: \"constraints\" }, outputs: { event: \"event\" }, exportAs: [\"scanner\"], decls: 6, vars: 0, consts: [[1, \"origin-overlay\"], [\"resultsPanel\", \"\"], [1, \"origin-canvas\"], [\"canvas\", \"\"], [\"playsinline\", \"\", 1, \"origin-video\"], [\"video\", \"\"]], template: function NgxScannerQrcodeComponent_Template(rf, ctx) { if (rf & 1) {\n        Éµngcc0.ÉµÉµelement(0, \"div\", 0, 1)(2, \"canvas\", 2, 3)(4, \"video\", 4, 5);\n    } }, styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;color:red;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute}.qrcode-tooltip-temp{bottom:0;left:50%;padding:5px;color:#fff;text-align:left;display:none;max-width:450px;border-radius:5px;width:-moz-max-content;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(NgxScannerQrcodeComponent, [{\n        type: Component,\n        args: [{ selector: 'ngx-scanner-qrcode', template: `<div #resultsPanel class=\"origin-overlay\"></div><canvas #canvas class=\"origin-canvas\"></canvas><video #video playsinline class=\"origin-video\"></video>`, host: { 'class': 'ngx-scanner-qrcode' }, exportAs: 'scanner', inputs: ['src', 'fps', 'vibrate', 'decode', 'isBeep', 'deviceActive', 'config', 'constraints'], outputs: ['event'], queries: {\n                    video: new ViewChild('video'),\n                    canvas: new ViewChild('canvas'),\n                    resultsPanel: new ViewChild('resultsPanel')\n                }, encapsulation: ViewEncapsulation.None, styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;color:red;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute}.qrcode-tooltip-temp{bottom:0;left:50%;padding:5px;color:#fff;text-align:left;display:none;max-width:450px;border-radius:5px;width:-moz-max-content;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}\"] }]\n    }], function () { return []; }, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {number} */\r\nconst ScannerQRCodeSymbolType = {\r\n    ScannerQRCode_NONE: 0,\r\n    ScannerQRCode_PARTIAL: 1,\r\n    ScannerQRCode_EAN2: 2,\r\n    ScannerQRCode_EAN5: 5,\r\n    ScannerQRCode_EAN8: 8,\r\n    ScannerQRCode_UPCE: 9,\r\n    ScannerQRCode_ISBN10: 10,\r\n    ScannerQRCode_UPCA: 12,\r\n    ScannerQRCode_EAN13: 13,\r\n    ScannerQRCode_ISBN13: 14,\r\n    ScannerQRCode_COMPOSITE: 15,\r\n    ScannerQRCode_I25: 25,\r\n    ScannerQRCode_DATABAR: 34,\r\n    ScannerQRCode_DATABAR_EXP: 35,\r\n    ScannerQRCode_CODABAR: 38,\r\n    ScannerQRCode_CODE39: 39,\r\n    ScannerQRCode_PDF417: 57,\r\n    ScannerQRCode_QRCODE: 64,\r\n    ScannerQRCode_SQCODE: 80,\r\n    ScannerQRCode_CODE93: 93,\r\n    ScannerQRCode_CODE128: 128,\r\n    /*\r\n     * Please see _ScannerQRCode_get_symbol_hash() if adding\r\n     * anything after 128\r\n     */\r\n    /** mask for base symbol type.\r\n     * @deprecated in 0.11, remove this from existing code\r\n     */\r\n    ScannerQRCode_SYMBOL: 255,\r\n    /** 2-digit add-on flag.\r\n     * @deprecated in 0.11, a ::ScannerQRCode_EAN2 component is used for\r\n     * 2-digit GS1 add-ons\r\n     */\r\n    ScannerQRCode_ADDON2: 512,\r\n    /** 5-digit add-on flag.\r\n     * @deprecated in 0.11, a ::ScannerQRCode_EAN5 component is used for\r\n     * 5-digit GS1 add-ons\r\n     */\r\n    ScannerQRCode_ADDON5: 1280,\r\n    /** add-on flag mask.\r\n     * @deprecated in 0.11, GS1 add-ons are represented using composite\r\n     * symbols of type ::ScannerQRCode_COMPOSITE; add-on components use ::ScannerQRCode_EAN2\r\n     * or ::ScannerQRCode_EAN5\r\n     */\r\n    ScannerQRCode_ADDON: 1792,\r\n};\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_NONE] = 'ScannerQRCode_NONE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_PARTIAL] = 'ScannerQRCode_PARTIAL';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN2] = 'ScannerQRCode_EAN2';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN5] = 'ScannerQRCode_EAN5';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN8] = 'ScannerQRCode_EAN8';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_UPCE] = 'ScannerQRCode_UPCE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ISBN10] = 'ScannerQRCode_ISBN10';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_UPCA] = 'ScannerQRCode_UPCA';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN13] = 'ScannerQRCode_EAN13';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ISBN13] = 'ScannerQRCode_ISBN13';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_COMPOSITE] = 'ScannerQRCode_COMPOSITE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_I25] = 'ScannerQRCode_I25';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_DATABAR] = 'ScannerQRCode_DATABAR';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_DATABAR_EXP] = 'ScannerQRCode_DATABAR_EXP';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODABAR] = 'ScannerQRCode_CODABAR';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE39] = 'ScannerQRCode_CODE39';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_PDF417] = 'ScannerQRCode_PDF417';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_QRCODE] = 'ScannerQRCode_QRCODE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_SQCODE] = 'ScannerQRCode_SQCODE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE93] = 'ScannerQRCode_CODE93';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE128] = 'ScannerQRCode_CODE128';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_SYMBOL] = 'ScannerQRCode_SYMBOL';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON2] = 'ScannerQRCode_ADDON2';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON5] = 'ScannerQRCode_ADDON5';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON] = 'ScannerQRCode_ADDON';\r\n/** @enum {number} */\r\nconst ScannerQRCodeConfigType = {\r\n    ScannerQRCode_CFG_ENABLE: 0,\r\n    ScannerQRCode_CFG_ADD_CHECK: 1,\r\n    ScannerQRCode_CFG_EMIT_CHECK: 2,\r\n    ScannerQRCode_CFG_ASCII: 3,\r\n    ScannerQRCode_CFG_BINARY: 4,\r\n    ScannerQRCode_CFG_NUM: 5,\r\n    ScannerQRCode_CFG_MIN_LEN: 32,\r\n    ScannerQRCode_CFG_MAX_LEN: 33,\r\n    ScannerQRCode_CFG_UNCERTAINTY: 64,\r\n    ScannerQRCode_CFG_POSITION: 128,\r\n    ScannerQRCode_CFG_TEST_INVERTED: 129,\r\n    ScannerQRCode_CFG_X_DENSITY: 256,\r\n    ScannerQRCode_CFG_Y_DENSITY: 257,\r\n};\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ENABLE] = 'ScannerQRCode_CFG_ENABLE';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ADD_CHECK] = 'ScannerQRCode_CFG_ADD_CHECK';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_EMIT_CHECK] = 'ScannerQRCode_CFG_EMIT_CHECK';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ASCII] = 'ScannerQRCode_CFG_ASCII';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_BINARY] = 'ScannerQRCode_CFG_BINARY';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_NUM] = 'ScannerQRCode_CFG_NUM';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_MIN_LEN] = 'ScannerQRCode_CFG_MIN_LEN';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_MAX_LEN] = 'ScannerQRCode_CFG_MAX_LEN';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_UNCERTAINTY] = 'ScannerQRCode_CFG_UNCERTAINTY';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_POSITION] = 'ScannerQRCode_CFG_POSITION';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_TEST_INVERTED] = 'ScannerQRCode_CFG_TEST_INVERTED';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_X_DENSITY] = 'ScannerQRCode_CFG_X_DENSITY';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_Y_DENSITY] = 'ScannerQRCode_CFG_Y_DENSITY';\r\n/** @enum {number} */\r\nconst ScannerQRCodeOrientation = {\r\n    ScannerQRCode_ORIENT_UNKNOWN: -1,\r\n    ScannerQRCode_ORIENT_UP: 0,\r\n    ScannerQRCode_ORIENT_RIGHT: 1,\r\n    ScannerQRCode_ORIENT_DOWN: 2,\r\n    ScannerQRCode_ORIENT_LEFT: 3,\r\n};\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_UNKNOWN] = 'ScannerQRCode_ORIENT_UNKNOWN';\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_UP] = 'ScannerQRCode_ORIENT_UP';\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_RIGHT] = 'ScannerQRCode_ORIENT_RIGHT';\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_DOWN] = 'ScannerQRCode_ORIENT_DOWN';\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_LEFT] = 'ScannerQRCode_ORIENT_LEFT';\r\nclass ScannerQRCodeTypePointer {\r\n    /**\r\n     * @param {?} ptr\r\n     * @param {?} buf\r\n     */\r\n    constructor(ptr, buf) {\r\n        this.ptr = ptr;\r\n        this.ptr32 = ptr >> 2;\r\n        this.buf = buf;\r\n        this.HEAP8 = new Int8Array(buf);\r\n        this.HEAPU32 = new Uint32Array(buf);\r\n        this.HEAP32 = new Int32Array(buf);\r\n    }\r\n}\r\nclass ScannerQRCodeSymbolPtr extends ScannerQRCodeTypePointer {\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get type() {\r\n        return (/** @type {?} */ (this.HEAPU32[this.ptr32]));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get data() {\r\n        /** @type {?} */\r\n        const len = this.HEAPU32[this.ptr32 + 4];\r\n        /** @type {?} */\r\n        const ptr = this.HEAPU32[this.ptr32 + 5];\r\n        return Int8Array.from(this.HEAP8.subarray(ptr, ptr + len));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get points() {\r\n        /** @type {?} */\r\n        const len = this.HEAPU32[this.ptr32 + 7];\r\n        /** @type {?} */\r\n        const ptr = this.HEAPU32[this.ptr32 + 8];\r\n        /** @type {?} */\r\n        const ptr32 = ptr >> 2;\r\n        /** @type {?} */\r\n        const res = [];\r\n        for (let i = 0; i < len; ++i) {\r\n            /** @type {?} */\r\n            const x = this.HEAP32[ptr32 + i * 2];\r\n            /** @type {?} */\r\n            const y = this.HEAP32[ptr32 + i * 2 + 1];\r\n            res.push((/** @type {?} */ ({ x, y })));\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get orientation() {\r\n        return this.HEAP32[this.ptr32 + 9];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get next() {\r\n        /** @type {?} */\r\n        const ptr = this.HEAPU32[this.ptr32 + 11];\r\n        if (!ptr)\r\n            return null;\r\n        return new ScannerQRCodeSymbolPtr(ptr, this.buf);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get time() {\r\n        return this.HEAPU32[this.ptr32 + 13];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get cacheCount() {\r\n        return this.HEAP32[this.ptr32 + 14];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get quality() {\r\n        return this.HEAP32[this.ptr32 + 15];\r\n    }\r\n}\r\nclass SymbolSetPtr extends ScannerQRCodeTypePointer {\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get head() {\r\n        /** @type {?} */\r\n        const ptr = this.HEAPU32[this.ptr32 + 2];\r\n        if (!ptr)\r\n            return null;\r\n        return new ScannerQRCodeSymbolPtr(ptr, this.buf);\r\n    }\r\n}\r\nclass ScannerQRCodeResult {\r\n    /**\r\n     * @private\r\n     * @param {?} ptr\r\n     */\r\n    constructor(ptr) {\r\n        this.value = '';\r\n        this.type = ptr.type;\r\n        this.typeName = ScannerQRCodeSymbolType[this.type];\r\n        this.data = ptr.data;\r\n        this.points = ptr.points;\r\n        this.orientation = ptr.orientation;\r\n        this.time = ptr.time;\r\n        this.cacheCount = ptr.cacheCount;\r\n        this.quality = ptr.quality;\r\n    }\r\n    /**\r\n     * @param {?} ptr\r\n     * @param {?} buf\r\n     * @return {?}\r\n     */\r\n    static createSymbolsFromPtr(ptr, buf) {\r\n        if (ptr == 0)\r\n            return [];\r\n        /** @type {?} */\r\n        const set = new SymbolSetPtr(ptr, buf);\r\n        /** @type {?} */\r\n        let symbol = set.head;\r\n        /** @type {?} */\r\n        const res = [];\r\n        while (symbol !== null) {\r\n            res.push(new ScannerQRCodeResult(symbol));\r\n            symbol = symbol.next;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @param {?=} encoding\r\n     * @return {?}\r\n     */\r\n    decode(encoding) {\r\n        /** @type {?} */\r\n        const decoder = new TextDecoder(encoding);\r\n        return decoder.decode(this.data);\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxScannerQrcodeModule {\r\n}\nNgxScannerQrcodeModule.Éµfac = function NgxScannerQrcodeModule_Factory(t) { return new (t || NgxScannerQrcodeModule)(); };\nNgxScannerQrcodeModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: NgxScannerQrcodeModule });\nNgxScannerQrcodeModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({ providers: [NgxScannerQrcodeService] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(NgxScannerQrcodeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxScannerQrcodeComponent],\n                exports: [NgxScannerQrcodeComponent],\n                providers: [NgxScannerQrcodeService]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(NgxScannerQrcodeModule, { declarations: [NgxScannerQrcodeComponent], exports: [NgxScannerQrcodeComponent] }); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxScannerQrcodeService, NgxScannerQrcodeComponent, ScannerQRCodeSymbolType, ScannerQRCodeConfigType, ScannerQRCodeOrientation, ScannerQRCodeResult, NgxScannerQrcodeModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}