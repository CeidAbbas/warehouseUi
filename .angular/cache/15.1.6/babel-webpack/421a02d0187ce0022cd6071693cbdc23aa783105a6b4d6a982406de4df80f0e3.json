{"ast":null,"code":"import { BaseService } from \"../general/service/base.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PackageWarehouseInventoryService extends BaseService {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.packageWarehouseInventoryUrl = this.baseUrl + 'rest/packageWarehouseInventory';\n  }\n  getAllPackageWarehouseInventory() {\n    return this.httpClient.get(`${this.packageWarehouseInventoryUrl}/getAll`);\n  }\n  // getByWarehouseId(warehouseId: string): Observable<WarehouseInventory[]> {\n  //   return this.httpClient.get<WarehouseInventory[]>(`${this.warehouseInventoryUrl}/getByWarehouseId/${warehouseId}`);\n  // }\n  getPackageWarehouseInventory(packageWarehouseInventoryId) {\n    return this.httpClient.get(`${this.packageWarehouseInventoryUrl}/load/${packageWarehouseInventoryId}`);\n  }\n  savePackageWarehouseInventory(packageWarehouseInventory) {\n    console.log('packageWarehouseInventory');\n    console.log(packageWarehouseInventory);\n    return this.httpClient.post(`${this.packageWarehouseInventoryUrl}/save`, packageWarehouseInventory);\n  }\n}\nPackageWarehouseInventoryService.ɵfac = function PackageWarehouseInventoryService_Factory(t) {\n  return new (t || PackageWarehouseInventoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nPackageWarehouseInventoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PackageWarehouseInventoryService,\n  factory: PackageWarehouseInventoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,QAAO,iCAAiC;;;AAS3D,OAAM,MAAOC,gCAAiC,SAAQD,WAAW;EAG/DE,YAAoBC,UAAsB;IACxC,KAAK,EAAE;IADW,eAAU,GAAVA,UAAU;IAFtB,iCAA4B,GAAG,IAAI,CAACC,OAAO,GAAG,gCAAgC;EAItF;EAGAC,+BAA+B;IAC7B,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAuB,GAAG,IAAI,CAACC,4BAA4B,SAAS,CAAC;EACjG;EAEA;EACA;EACA;EAEAC,4BAA4B,CAACC,2BAAmC;IAC9D,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAA8B,GAAG,IAAI,CAACC,4BAA4B,SAASE,2BAA2B,EAAE,CAAC;EACrI;EAEAC,6BAA6B,CAACC,yBAAsD;IAClFC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxCD,OAAO,CAACC,GAAG,CAACF,yBAAyB,CAAC;IACtC,OAAO,IAAI,CAACR,UAAU,CAACW,IAAI,CAA8B,GAAG,IAAI,CAACP,4BAA4B,OAAO,EAAEI,yBAAyB,CAAC;EAClI;;AAxBWV,gCAAiC;mBAAjCA,gCAAgC;AAAA;AAAhCA,gCAAiC;SAAjCA,gCAAgC;EAAAc,SAAhCd,gCAAgC;EAAAe,YAF/B;AAAM","names":["BaseService","PackageWarehouseInventoryService","constructor","httpClient","baseUrl","getAllPackageWarehouseInventory","get","packageWarehouseInventoryUrl","getPackageWarehouseInventory","packageWarehouseInventoryId","savePackageWarehouseInventory","packageWarehouseInventory","console","log","post","factory","providedIn"],"sourceRoot":"","sources":["D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\packageWarehouseInventory\\package-warehouse-inventory.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BaseService} from \"../general/service/base.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {WarehouseInventory} from \"../warehouse-inventory/warehouse-inventory\";\r\nimport { PackageWarehouseInventory } from './package-warehouse-inventory';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PackageWarehouseInventoryService extends BaseService {\r\n  private packageWarehouseInventoryUrl = this.baseUrl + 'rest/packageWarehouseInventory';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n\r\n\r\n  getAllPackageWarehouseInventory(): Observable<WarehouseInventory[]> {\r\n    return this.httpClient.get<WarehouseInventory[]>(`${this.packageWarehouseInventoryUrl}/getAll`);\r\n  }\r\n\r\n  // getByWarehouseId(warehouseId: string): Observable<WarehouseInventory[]> {\r\n  //   return this.httpClient.get<WarehouseInventory[]>(`${this.warehouseInventoryUrl}/getByWarehouseId/${warehouseId}`);\r\n  // }\r\n\r\n  getPackageWarehouseInventory(packageWarehouseInventoryId: string): Observable<PackageWarehouseInventory[]> {\r\n    return this.httpClient.get<PackageWarehouseInventory[]>(`${this.packageWarehouseInventoryUrl}/load/${packageWarehouseInventoryId}`);\r\n  }\r\n\r\n  savePackageWarehouseInventory(packageWarehouseInventory: PackageWarehouseInventory[]): Observable<PackageWarehouseInventory[]> {\r\n    console.log('packageWarehouseInventory');\r\n    console.log(packageWarehouseInventory);\r\n    return this.httpClient.post<PackageWarehouseInventory[]>(`${this.packageWarehouseInventoryUrl}/save`, packageWarehouseInventory);\r\n  }\r\n\r\n  // deleteWarehouseInventory(warehouseInventory: WarehouseInventory): Observable<any> {\r\n  //   return this.httpClient.delete(`${this.warehouseInventoryUrl}/delete/${warehouseInventory.id}`);\r\n  // }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}