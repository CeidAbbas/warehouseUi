{"ast":null,"code":"import { BaseService } from '../general/service/base.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonService extends BaseService {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.personUrl = this.baseUrl + 'rest/person';\n  }\n  getAllPerson() {\n    return this.httpClient.get(`${this.personUrl}/getAll`);\n  }\n  loadPerson(personId) {\n    return this.httpClient.get(`${this.personUrl}/load/${personId}`);\n  }\n  savePerson(person) {\n    return this.httpClient.post(`${this.personUrl}/save`, person);\n  }\n  deletePerson(person) {\n    return this.httpClient.delete(`${this.personUrl}/delete/${person.id}`);\n  }\n}\nPersonService.ɵfac = function PersonService_Factory(t) {\n  return new (t || PersonService)(i0.ɵɵinject(i1.HttpClient));\n};\nPersonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PersonService,\n  factory: PersonService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAQA,WAAW,QAAO,iCAAiC;;;AAK3D,OAAM,MAAOC,aAAc,SAAQD,WAAW;EAI5CE,YAAoBC,UAAsB;IACxC,KAAK,EAAE;IADW,eAAU,GAAVA,UAAU;IAFvB,cAAS,GAAG,IAAI,CAACC,OAAO,GAAG,aAAa;EAI/C;EAEAC,YAAY;IACV,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAW,GAAG,IAAI,CAACC,SAAS,SAAS,CAAC;EAClE;EAEAC,UAAU,CAACC,QAAgB;IACzB,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,SAAS,SAASE,QAAQ,EAAE,CAAC;EAC1E;EAEAC,UAAU,CAACC,MAAc;IACvB,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,GAAG,IAAI,CAACL,SAAS,OAAO,EAAEI,MAAM,CAAC;EAC/D;EAEAE,YAAY,CAACF,MAAc;IACzB,OAAO,IAAI,CAACR,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACP,SAAS,WAAWI,MAAM,CAACI,EAAE,EAAE,CAAC;EACxE;;AAtBWd,aAAc;mBAAdA,aAAa;AAAA;AAAbA,aAAc;SAAdA,aAAa;EAAAe,SAAbf,aAAa;EAAAgB,YAFZ;AAAM","names":["BaseService","PersonService","constructor","httpClient","baseUrl","getAllPerson","get","personUrl","loadPerson","personId","savePerson","person","post","deletePerson","delete","id","factory","providedIn"],"sourceRoot":"","sources":["D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\person\\person.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Person} from './person';\r\nimport {BaseService} from '../general/service/base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonService extends BaseService {\r\n\r\n  public personUrl = this.baseUrl + 'rest/person';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getAllPerson(): Observable<Person[]> {\r\n    return this.httpClient.get<Person[]>(`${this.personUrl}/getAll`);\r\n  }\r\n\r\n  loadPerson(personId: string): Observable<Person> {\r\n    return this.httpClient.get<Person>(`${this.personUrl}/load/${personId}`);\r\n  }\r\n\r\n  savePerson(person: Person): Observable<Object> {\r\n    return this.httpClient.post(`${this.personUrl}/save`, person);\r\n  }\r\n\r\n  deletePerson(person: Person): Observable<any> {\r\n    return this.httpClient.delete(`${this.personUrl}/delete/${person.id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}