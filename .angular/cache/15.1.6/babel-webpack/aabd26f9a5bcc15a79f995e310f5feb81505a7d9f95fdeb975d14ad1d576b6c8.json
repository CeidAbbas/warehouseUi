{"ast":null,"code":"import { BaseService } from \"../general/service/base.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ForwardingService extends BaseService {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.forwardingUrl = this.baseUrl + 'rest/forwarding';\n  }\n  getAllForwarding() {\n    return this.httpClient.get(`${this.forwardingUrl}/getAll`);\n  }\n  loadForwarding(forwardingId) {\n    return this.httpClient.get(`${this.forwardingUrl}/load/${forwardingId}`);\n  }\n  saveForwarding(forwarding) {\n    return this.httpClient.post(`${this.forwardingUrl}/save`, forwarding);\n  }\n  deleteForwarding(forwarding) {\n    return this.httpClient.delete(`${this.forwardingUrl}/delete/${forwarding.id}`);\n  }\n  getForwardingPackage(forwardingId) {\n    return this.httpClient.get(`${this.forwardingUrl}/getForwardingPackage/${forwardingId}`);\n  }\n  addPackageToForwarding(forwardingPackage) {\n    return this.httpClient.post(`${this.forwardingUrl}/addPackageToForwarding`, forwardingPackage);\n  }\n}\nForwardingService.ɵfac = function ForwardingService_Factory(t) {\n  return new (t || ForwardingService)(i0.ɵɵinject(i1.HttpClient));\n};\nForwardingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ForwardingService,\n  factory: ForwardingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAQA,WAAW,QAAO,iCAAiC;;;AAO3D,OAAM,MAAOC,iBAAkB,SAAQD,WAAW;EAIhDE,YAAoBC,UAAsB;IACxC,KAAK,EAAE;IADW,eAAU,GAAVA,UAAU;IAFvB,kBAAa,GAAG,IAAI,CAACC,OAAO,GAAG,iBAAiB;EAIvD;EAEAC,gBAAgB;IACd,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAe,GAAG,IAAI,CAACC,aAAa,SAAS,CAAC;EAC1E;EAEAC,cAAc,CAACC,YAAoB;IACjC,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAa,GAAG,IAAI,CAACC,aAAa,SAASE,YAAY,EAAE,CAAC;EACtF;EAEAC,cAAc,CAACC,UAAsB;IACnC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAa,GAAG,IAAI,CAACL,aAAa,OAAO,EAAEI,UAAU,CAAC;EACnF;EAEAE,gBAAgB,CAACF,UAAsB;IACrC,OAAO,IAAI,CAACR,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACP,aAAa,WAAWI,UAAU,CAACI,EAAE,EAAE,CAAC;EAChF;EAEAC,oBAAoB,CAACP,YAAqB;IACxC,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAsB,GAAG,IAAI,CAACC,aAAa,yBAAyBE,YAAY,EAAE,CAAC;EAC/G;EAEAQ,sBAAsB,CAACC,iBAAoC;IACzD,OAAO,IAAI,CAACf,UAAU,CAACS,IAAI,CAAoB,GAAG,IAAI,CAACL,aAAa,yBAAyB,EAAEW,iBAAiB,CAAC;EACnH;;AA9BWjB,iBAAkB;mBAAlBA,iBAAiB;AAAA;AAAjBA,iBAAkB;SAAlBA,iBAAiB;EAAAkB,SAAjBlB,iBAAiB;EAAAmB,YAFhB;AAAM","names":["BaseService","ForwardingService","constructor","httpClient","baseUrl","getAllForwarding","get","forwardingUrl","loadForwarding","forwardingId","saveForwarding","forwarding","post","deleteForwarding","delete","id","getForwardingPackage","addPackageToForwarding","forwardingPackage","factory","providedIn"],"sourceRoot":"","sources":["D:\\wamp64\\www\\warehouseMicroService\\warehouseUi0\\src\\app\\forwarding\\forwarding.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {BaseService} from \"../general/service/base.service\";\r\nimport {Forwarding} from \"./forwarding\";\r\nimport {ForwardingPackage} from \"../forwardingPackge/forwardingPackage\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ForwardingService extends BaseService {\r\n\r\n  public forwardingUrl = this.baseUrl + 'rest/forwarding';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getAllForwarding(): Observable<Forwarding[]> {\r\n    return this.httpClient.get<Forwarding[]>(`${this.forwardingUrl}/getAll`);\r\n  }\r\n\r\n  loadForwarding(forwardingId: string): Observable<Forwarding> {\r\n    return this.httpClient.get<Forwarding>(`${this.forwardingUrl}/load/${forwardingId}`);\r\n  }\r\n\r\n  saveForwarding(forwarding: Forwarding): Observable<Object> {\r\n    return this.httpClient.post<Forwarding>(`${this.forwardingUrl}/save`, forwarding);\r\n  }\r\n\r\n  deleteForwarding(forwarding: Forwarding): Observable<any> {\r\n    return this.httpClient.delete(`${this.forwardingUrl}/delete/${forwarding.id}`);\r\n  }\r\n\r\n  getForwardingPackage(forwardingId?: string): Observable<ForwardingPackage[]> {\r\n    return this.httpClient.get<ForwardingPackage[]>(`${this.forwardingUrl}/getForwardingPackage/${forwardingId}`);\r\n  }\r\n\r\n  addPackageToForwarding(forwardingPackage: ForwardingPackage): Observable<ForwardingPackage> {\r\n    return this.httpClient.post<ForwardingPackage>(`${this.forwardingUrl}/addPackageToForwarding`, forwardingPackage)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}